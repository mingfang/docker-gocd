CREATE ALIAS ADDCOLUMNIFABSENT FOR "com.thoughtworks.cruise.server.sqlmigration.Migration_230001.createColumnIfNotExist";
call ADDCOLUMNIFABSENT();

DROP VIEW _builds;

DROP VIEW _stages;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter, s.artifactsDeleted
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;

CREATE VIEW _stages AS
SELECT s.*,
  p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, p.locked, p.naturalOrder
FROM stages s
  INNER JOIN pipelines p ON p.id = s.pipelineId;

CREATE TABLE IF NOT EXISTS stageArtifactCleanupProhibited (
             id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
             stageName VARCHAR_IGNORECASE(255) NOT NULL,
             pipelineName VARCHAR_IGNORECASE(255) NOT NULL,
             prohibited Boolean DEFAULT FALSE NOT NULL);

--//@UNDO

DROP TABLE stageArtifactCleanupProhibited;

ALTER TABLE stages DROP COLUMN artifactsDeleted;

DROP VIEW _builds;

DROP VIEW _stages;

CREATE VIEW _builds AS
SELECT b.*,
  p.id pipelineId, p.name pipelineName, p.label pipelineLabel, p.counter pipelineCounter,
  s.name stageName, s.counter stageCounter, s.fetchMaterials, s.cleanWorkingDir, s.rerunOfCounter
FROM builds b
  INNER JOIN stages s ON s.id = b.stageId
  INNER JOIN pipelines p ON p.id = s.pipelineId;

CREATE VIEW _stages AS
SELECT s.*,
  p.name pipelineName, p.buildCauseType, p.buildCauseBy, p.label pipelineLabel, p.buildCauseMessage, p.counter pipelineCounter, p.locked, p.naturalOrder
FROM stages s
  INNER JOIN pipelines p ON p.id = s.pipelineId;