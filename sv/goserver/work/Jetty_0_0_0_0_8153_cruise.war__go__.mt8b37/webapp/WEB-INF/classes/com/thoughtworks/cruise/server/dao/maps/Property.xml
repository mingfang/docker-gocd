<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Property">

    <insert id="saveProperty" parameterClass="java.util.Map">
        INSERT INTO properties (buildId, key, value) VALUES (#instanceId#, #propertyName#, #value#)
        <selectKey resultClass="long" keyProperty="id" type="post">
            CALL IDENTITY();
        </selectKey>
    </insert>

    <insert id="saveProperty-postgresql" parameterClass="java.util.Map">
        INSERT INTO properties (buildId, key, value) VALUES (#instanceId#, #propertyName#, #value#)
        <selectKey resultClass="long" keyProperty="id" type="post">
            SELECT lastval();
        </selectKey>
    </insert>

    <select id="getProperty" parameterClass="java.util.Map" resultClass="java.lang.String">
        SELECT value FROM properties
        WHERE buildId = #instanceId# AND key = #propertyName#
    </select>

    <select id="getAllPropertiesByBuildInstanceId" parameterClass="long" resultClass="com.thoughtworks.cruise.domain.Property">
        SELECT key, value FROM properties
        WHERE buildId = #value#
        ORDER BY key
    </select>

    <select id="pipelineIdByLabel" resultClass="long">
        SELECT pipelines.id
        FROM pipelines
        WHERE pipelines.name = #pipeline#
        <isPropertyAvailable property="limitLabel" prepend="AND">
            pipelines.label = #limitLabel#
        </isPropertyAvailable>
        ORDER BY pipelines.id DESC
        LIMIT 1
    </select>

    <select id="limitedPipelineIds" resultClass="long">
        SELECT pipelineId
        FROM _builds
        WHERE stageName = #stage#
        AND name = #build#
        AND pipelineName = #pipeline#
        <isPropertyAvailable property="pipelineId" prepend="AND">
            pipelineId &lt;= #pipelineId#
        </isPropertyAvailable>
        GROUP BY pipelineId
        ORDER BY pipelineId DESC
        LIMIT #limitCount#
    </select>

    <select id="getAllPropertiesHistory" resultClass="java.util.HashMap">
        SELECT pipelines.id AS pipelineid, key AS key, value AS value
        FROM properties
        INNER JOIN builds ON builds.id = properties.buildId AND builds.name = #build#
        INNER JOIN stages ON stages.id = builds.stageId AND stages.name = #stage#
        INNER JOIN pipelines ON pipelines.id = stages.pipelineId AND
        pipelines.name = #pipeline# AND
        pipelines.id &lt;= #maxId# AND
        pipelines.id &gt;= #minId#
        <isPropertyAvailable property="propertyName" prepend="WHERE">
            key = #propertyName#
        </isPropertyAvailable>
        ORDER BY builds.id, key
    </select>

</sqlMap>