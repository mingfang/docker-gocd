<div id="new_job_container">
    <%= render(:partial => "shared/flash_message") %>
    <% scope = {}; -%><% if @config_file_conflict -%>
    <div id="config_save_actions" class="flash">
        <button id="reload_config" class="reload_config primary"><%=l.string("RELOAD")-%></button>
        <label class="inline"><%=l.string("REFRESH_CONFIG")%></label>
    </div>
    <script type="text/javascript">
        Util.on_load(function() {
           jQuery("#reload_config").click(function() {
               var location = "<%= request.referer -%>";
               if (location.endsWith("#")) {
                   location = location.substring(0, location.length - 1);
               }
               window.location.href = location;
           });
        });
    </script>
<% end -%>
    <% form_for(:job, @job,
                :url => admin_job_create_path,
                :html => {:method => "POST",
                          :onsubmit => "return AjaxForm.jquery_ajax_submit(this);",
                          :class => "popup_form"}) do |f| %>
        <%= md5_field %>
        <input type="hidden" name="current_tab" value="jobs" />
        <div class="form_content">
            <% scope = {}; -%><% if @errors && !@errors.empty? %>
    <div class="form_submit_errors">
        <div class="errors">
            <h3><%= l.string("GLOBAL_ERRORS_MESSAGE") -%></h3>
            <ul>
                <% @errors.each do |error| %>
                    <li class="error"><%= h(error.to_s) -%></li>
                <% end %>
            </ul>
        </div>
    </div>
<% end %>
            <h3><%= l.string("JOB_INFORMATION") -%></h3>
            <% scope = { :job => @job, :form => f, :cruise_config => @cruise_config}; -%><div class="fieldset">
    <div class="form_item required">
        <div class="form_item_block">
            <%= required_label(scope[:form], :name, l.string("JOB_NAME")) %>
            <div>
                <%= scope[:form].text_field :name %>
                <%= error_message_on(scope[:job], com.thoughtworks.cruise.config.JobConfig::NAME, :css_class => "form_error") %>
            </div>
        </div>
        <div class="form_item_block">
            <%= scope[:form].label com.thoughtworks.cruise.config.JobConfig::RESOURCES, l.string("RESOURCES") %>
            <div>
                <%= scope[:form].text_field com.thoughtworks.cruise.config.JobConfig::RESOURCES, :class => "resources_auto_complete", :value => scope[:job].resources().exportToCsv() %>
                <div class="contextual_help has_go_tip_right" title="<%= l.string("TOOLTIP_RESOURCES") -%>"></div>
                <%- scope[:job].resources().each do |resource| -%>
                    <%= error_message_on(resource, com.thoughtworks.cruise.config.JobConfig::RESOURCES, :css_class => "form_error") -%>
                <%- end -%>
            </div>
            <div class="inline_instruction">
                <%= l.string('INSTRUCTION_RESOURCES') -%>
            </div>
        </div>
        <div class="form_item">
            <%= scope[:form].label com.thoughtworks.cruise.config.JobConfig::TIMEOUT, l.string("JOB_TIMEOUT"), :class => "before_tip" %>
            <div class="contextual_help has_go_tip_right" title="<%=l.string("TOOLTIP_JOB_TIMEOUT")-%>"></div>
            <div class="clear"></div>

            <div class="checkbox_row">
                <%= scope[:form].radio_button 'timeoutType', com.thoughtworks.cruise.config.JobConfig::NEVER_TIMEOUT, :id => "jobTimeout_never" -%>
                <%= label_tag "jobTimeout_never", l.string("NEVER_TIMEOUT") -%>
            </div>
            
            <div class="checkbox_row">
                <%= scope[:form].radio_button 'timeoutType', com.thoughtworks.cruise.config.JobConfig::DEFAULT_TIMEOUT, :id => "jobTimeout_default" -%>
                <%= label_tag "jobTimeout_default", "#{l.string("DEFAULT_TIMEOUT")} (#{default_job_timeout_for_display(scope[:cruise_config])})"-%>
            </div>

            <div class="override_timeout checkbox_row">
                <%= scope[:form].radio_button 'timeoutType', com.thoughtworks.cruise.config.JobConfig::OVERRIDE_TIMEOUT, :id => "jobTimeout_override" -%>
                <%= label_tag "jobTimeout_override", l.string("OVERRIDE_TIMEOUT_PREFIX")  -%>
                <%= scope[:form].text_field com.thoughtworks.cruise.config.JobConfig::TIMEOUT, :class => "inline in_between_text small_text_field" %>
                <%= label_tag "jobTimeout_override", l.string("OVERRIDE_TIMEOUT_SUFFIX") -%>
            </div>
        </div>
        <div class="form_item_block checkbox_row run_on_all_agents">
            <%= scope[:form].check_box :runOnAllAgents, :title => "#{l.string("TOOLTIP_RUN_ON_ALL")}" %>
            <label for="job_runOnAllAgents" title="<%= l.string("TOOLTIP_RUN_ON_ALL") %>"><%= l.string('RUN_ON_ALL_AGENTS') -%></label>
            <%= error_message_on(scope[:job].isRunOnAllAgents(), "type", :css_class => "form_error") %>
        </div>
    </div>
    <% _scope = {}; -%><p class="required">
	<span class="asterisk"><%= l.string("REQUIRED_FIELD")%></span><%= l.string("REQUIRED_FIELD_MESSAGE")-%>
</p>
    <% _scope = {}; -%><script type="text/javascript">
    Util.on_load(function() {
        jQuery(".has_go_tip").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10});
        jQuery(".has_go_tip_right").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10, defaultPosition: "right"});
        jQuery(".has_go_tip_left").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10, defaultPosition: "left" });
        jQuery(".has_go_tip_top").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10, defaultPosition: "top" });
    });
</script>
</div>
<script type="text/javascript">

    Util.on_load(function() {
        function hookupResourcesAutoComplete() {
            jQuery(".resources_auto_complete").autocomplete(<%= @autocomplete_resources -%>, {
                multiple: true,
                minChars: 0,
                matchContains: true,
                selectFirst: false,
                multipleSeparator: ", ",
                width: 248});
        };
        
        hookupResourcesAutoComplete();

    });
</script>
            <h3><%= l.string("INITIAL_TASK") -%></h3>
            <div class="instructions">
                <%= l.string('INSTRUCTION_JOB_TASK') -%>
            </div>
            <div class="form_item tasks">
                <% scope = { :job => @job, :job_form => f}; -%><div class="form_item_block">
    <% tasks = scope[:job].getTasks()%>
    
    <% scope[:job_form].fields_for com.thoughtworks.cruise.config.JobConfig::TASKS, tasks do |tasks_form| %>
        <div class="fieldset">
            <div class="form_item required">
                <%= label_tag random_dom_id('task_type_'), l.string("TASK_TYPE")+"<span class=\"asterisk\">*</span>" %>
                <%= tasks_form.select(com.thoughtworks.cruise.config.Tasks::TASK_OPTIONS, task_options, {:selected => tasks.getTaskOptions()}, {:class => "task_type", :id => "job_task_options"}) %>
            </div>
            <div id="job_tasks">
                <% @task_view_models.each do |tvm|
                   taskk = tvm.getModel()
                   task_class_name = taskk.java_class.simple_name
                   next if task_class_name == "FetchTask"
                %>
                    <div class="hidden task_entry <%=task_class_name-%>">
                        <% tasks_form.fields_for task_class_name, taskk do |task_form| %>
                            <%= render_pluggable_form_template(task_view_service.getViewModel(taskk, 'new'), form_name_provider(task_form), { :scope => {:task => taskk, :form => task_form, :hide_runif => scope[:hide_runif]}}) -%>
                        <% end %>
                    </div>
                <% end %>
            </div>
        </div>

    <% end %>
    <script type="text/javascript">
        Util.on_load(function() {
            new TaskEditor.TypeEditor({container: jQuery('#job_tasks'), switch_control: jQuery('#job_task_options'), entry_to_be_hidden: '.task_entry'});
        });
    </script>
</div>

            </div>
        </div>
        <% scope = {:submit_label => "SAVE"}; -%><div class="form_buttons actions">
    <%= submit_button(scope[:submit_label], :class => 'primary finish') %>
    <button class="left submit close_modalbox_control"><span><%= l.string('CANCEL') -%></span></button>
</div>
        <% scope = {}; -%><script type="text/javascript">
    Util.on_load(function() {
        jQuery(".has_go_tip").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10});
        jQuery(".has_go_tip_right").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10, defaultPosition: "right"});
        jQuery(".has_go_tip_left").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10, defaultPosition: "left" });
        jQuery(".has_go_tip_top").tipTip({activation: "click", maxWidth: "auto", edgeOffset: 10, defaultPosition: "top" });
    });
</script>
    <% end %>
</div>
