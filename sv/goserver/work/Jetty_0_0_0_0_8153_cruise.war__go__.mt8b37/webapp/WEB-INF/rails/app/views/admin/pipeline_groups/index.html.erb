<%- @tab_name = 'pipeline-groups' -%>
<%- @view_title = l.string("ADMINISTRATION") %>

<div class="group_pipelines">
	<h1>
        Pipelines
		<span class="title_secondary_info">
			<% if @groups.size() == 0 %>
                <%= link_to l.string("ADD_FIRST_PIPELINE"), pipeline_new_path(:group => com.thoughtworks.cruise.config.PipelineConfigs::DEFAULT_GROUP), :class => "add_link add_pipeline_to_group" -%>
		    <% end %>
		    <% if is_user_an_admin? %>
		            <a href="#" class="add_link" onclick="Modalbox.show('<%= pipeline_group_new_path -%>', {overlayClose: false,title: '<%= l.string("ADD_NEW_PIPELINE_GROUP") -%>'})">
		                <%= l.string("ADD_NEW_PIPELINE_GROUP") -%>
		            </a>
		    <% end %>
		</span>
    </h1>
    <div id="div_move_to_groups" class="hidden enhanced_dropdown">
      <div class="resources_selector scrollable_panel" id="content_move_to_groups">
      </div>
    </div>

    <% @groups.each do |group| %>
        <div class="group pipeline_group">
            <h2 class="group_name entity_title"><%= word_breaker(group.getGroup(),25) %></h2>
            <%= link_to l.string("EDIT"), pipeline_group_edit_path(:group_name => group.getGroup()), :class=> "group_name_edit action_icon edit_icon" %>
            <% if is_user_an_admin? %>
                <% scope = {:group => group}; -%><%
   group = scope[:group]
   group_name = group.getGroup()
%>
<% if group.isEmpty() %>
    <% form_for :group, group, :url => pipeline_group_delete_path(:group_name => group_name), :html => {:id => "delete_group_#{group_name}", :method => :delete, :class => "group_name_delete", :title => "#{l.string("PIPELINE_GROUP_DELETE")}"} do |f| %>
        <%= md5_field %>
        <span class="delete_icon action_icon delete_parent" id="trigger_delete_group_<%= group_name %>">
                        <%= link_to l.string("DELETE"), "#" %>
            <% _scope = {:button_id => "trigger_delete_group_#{group_name}", :message => "Are you sure you want to delete the pipeline group '#{group_name}' ? ", :on_confirmation_js => "$('#{"delete_group_#{group_name}"}').submit()"}; -%><script type="text/javascript">
    <%- button_container = _scope[:button_container] -%>
    <%- button_id = _scope[:button_id] -%>
    <%- button_selector =  button_container==nil ? button_id : button_container+' #'+button_id -%>
    <%- prompt_selector =  button_container==nil ? button_id +' #warning_prompt' : button_container +' #warning_prompt' -%>
    <%- message = _scope[:message] -%>
    <%- on_confirmation_js = _scope[:on_confirmation_js] -%>
    jQuery(Util.escapeDotsFromId('<%=button_selector-%>')).click(function() {
        Modalbox.show(jQuery(Util.escapeDotsFromId('<%=prompt_selector-%>'))[0], {overlayClose: false, title: '<%= l.string("CONFIRM_DELETION") %>'});
    });
</script>
<div id="warning_prompt" class="warning" style="display:none;">
    <div class="ui-dialog-content">
        <p><%=message-%></p>
    </div>
    <div class="form_buttons actions">
        <%= submit_button(l.string("PROCEED"), :class=> "primary", :onclick => on_confirmation_js ) %>
        <%= submit_button(l.string("CANCEL"), :onclick => "Modalbox.hide()", :type => "button") %>
    </div>
</div>
        </span>
    <% end %>
<% else %>
    <span class="action_icon delete_icon_disabled group_name_delete" title="<%= l.string("PIPELINE_GROUP_CANNOT_DELETE") -%>">
    	<%= l.string("DELETE") -%>
    </span>
<% end %>
            <% end %>
            <% if group.isEmpty() %>
                <div class="no_pipeline_in_group">
                    <div class="information"><%= l.string("NO_PIPELINE_IN_GROUP") %></div>
                </div>
                <div class="add_first_pipeline_in_group">
                    <%= link_to l.string("ADD_PIPELINE_TO_GROUP"), pipeline_new_path(:group => group.getGroup()), :class => "add_link add_pipeline_to_group" -%>
                </div>
            <% else %>

                <table class="list_table">
                    <thead>
                    <tr class="pipeline">
                        <th class="name"><%= l.string("PIPELINE") %></th>
                        <th class="actions"><%= l.string("ACTIONS") %></th>
                    </tr>
                    </thead>
                    <tbody>
                    <% group.each do |pipeline| %>
                        <tr class="pipeline">
                            <td class="name"><%= link_to smart_word_breaker(pipeline.name()), pipeline_edit_path(:pipeline_name => pipeline.name(), :current_tab => "general") %></td>
                            <td class="actions">
                                <ul>
                                    <li>
                                        <%= link_to l.string("EDIT"), pipeline_edit_path(:pipeline_name => pipeline.name(), :current_tab => "general"), :class=> "edit_pipeline edit_for_pipeline_#{pipeline.name()} action_icon edit_icon" %>
                                    </li>
                                    <%- if @groups.size() > 1 -%>
                                        <li>
                                                <a id="a_move_<%=pipeline.name()-%>" href="<%= possible_groups_path(with_md5_param(:pipeline_name => pipeline.name())) -%>" class="move_pipeline move_icon action_icon"><%= l.string("MOVE_TO") -%>
                                                    <span class="for_down_arrow">&nbsp;</span>
                                                </a>
                                        </li>
                                    <%- end -%>
                                    <li>
                                        <% pipeline_random_id_for_clone = random_dom_id('clone_button_for_') -%>
                                        <a href="#" class="clone_pipeline clone_icon action_icon clone_button_for_<%= pipeline.name() -%>" id="<%= pipeline_random_id_for_clone -%>">
                                            <%= l.string("CLONE") -%>
                                        </a>
                                        <script type="text/javascript">
                                            Util.on_load(function() {
                                                jQuery("#<%=pipeline_random_id_for_clone-%>").live('click',function() {
                                                    var titleText = <%= "#{l.string("CLONE_PIPELINE")} - #{pipeline.name()}".to_json -%>;
                                                    Util.ajax_modal("<%= pipeline_clone_path(:pipeline_name => pipeline.name(), :group => group.getGroup()) -%>", {width: 805, title: titleText}, function(text){return text});
                                                });
                                            });
                                        </script>
                                    </li>
                                    <li>
                                        <% scope = {:pipeline => pipeline, :pipeline_to_can_delete => @pipeline_to_can_delete}; -%><% pipeline_to_be_deleted_name = scope[:pipeline].name() %>
<% unique_id_for_pipeline = random_dom_id("delete_pipeline_") %>
<% form_for :pipeline, scope[:pipeline], :url => {:action => "destroy", :pipeline_name => pipeline_to_be_deleted_name}, :html => {:id => "#{unique_id_for_pipeline}_form", :method => :delete} do |f| %>
    <%= md5_field %>
    <% can_delete =  scope[:pipeline_to_can_delete][pipeline_to_be_deleted_name]
       message = can_delete.message().localize(Spring.bean("localizer"))
    -%>
    <% if !can_delete.canDelete() %>
        <span class="action_icon delete_icon_disabled" title="<%= message -%>">
        	<%= l.string("DELETE") -%>
        </span>
    <% else %>
    <span class="delete_icon action_icon delete_parent" id="trigger_<%= unique_id_for_pipeline %>" title="<%= message -%>">
        <%= link_to l.string("DELETE"), "#" %>
        <% _scope = {:button_id => "trigger_#{unique_id_for_pipeline}", :message => "Are you sure you want to delete the pipeline '#{pipeline_to_be_deleted_name}' ? ", :on_confirmation_js => "$('#{"#{unique_id_for_pipeline}_form"}').submit()"}; -%><script type="text/javascript">
    <%- button_container = _scope[:button_container] -%>
    <%- button_id = _scope[:button_id] -%>
    <%- button_selector =  button_container==nil ? button_id : button_container+' #'+button_id -%>
    <%- prompt_selector =  button_container==nil ? button_id +' #warning_prompt' : button_container +' #warning_prompt' -%>
    <%- message = _scope[:message] -%>
    <%- on_confirmation_js = _scope[:on_confirmation_js] -%>
    jQuery(Util.escapeDotsFromId('<%=button_selector-%>')).click(function() {
        Modalbox.show(jQuery(Util.escapeDotsFromId('<%=prompt_selector-%>'))[0], {overlayClose: false, title: '<%= l.string("CONFIRM_DELETION") %>'});
    });
</script>
<div id="warning_prompt" class="warning" style="display:none;">
    <div class="ui-dialog-content">
        <p><%=message-%></p>
    </div>
    <div class="form_buttons actions">
        <%= submit_button(l.string("PROCEED"), :class=> "primary", :onclick => on_confirmation_js ) %>
        <%= submit_button(l.string("CANCEL"), :onclick => "Modalbox.hide()", :type => "button") %>
    </div>
</div>
    </span>
    <% end %>
<% end %>

                                    </li>
                                    <% if is_user_an_admin? %>
                                        <li>
                                            <% if pipeline.hasTemplate() %>
                                               <span class="action_icon add_icon_disabled extract_template_for_pipeline_<%=pipeline.name()-%>" title="<%= l.string("CANNOT_EXTRACT_TEMPLATE") -%>">
                                                   <%= l.string("EXTRACT_NEW_TEMPLATE") -%>
                                               </span>
                                            <% else %>
                                                <span class="title_secondary_info extract_template_for_pipeline_<%=pipeline.name()-%>">
                                                <a href="#" class="add_link" onclick="Util.ajax_modal('<%= template_new_path(:pipelineToExtractFrom => pipeline.name()) -%>', {overlayClose: false, title: '<%= l.string("EXTRACT_NEW_TEMPLATE")-%>'}, function(text){return text})">
                                                    <%= l.string("EXTRACT_NEW_TEMPLATE") -%>
                                                </a>
                                             </span>
                                            <% end %>
                                        </li>
                                    <% end %>
                                </ul>
                            </td>
                        </tr>
                    <% end %>
                    </tbody>
                </table>
                <%= link_to l.string("ADD_PIPELINE_TO_GROUP"), pipeline_new_path(:group => group.getGroup()), :class => "add_link add_pipeline_to_group" -%>
            <% end %>
        </div>
    <% end %>

    
</div>

<script type="text/javascript">
      jQuery("li.move_to_group_option").live('click', function(event) {
        var li = jQuery(this);
        var form = li.parents("form").get(0);
        jQuery(form["group_name"]).val(li.text());
        form.submit();
    });

    AjaxForm.error_box_selector = '#MB_content';
    var content_box = jQuery("#content_move_to_groups");
    var groupPopup = new MicroContentPopup("div_move_to_groups", new ContextualPropagatingAjaxPopupHandler(content_box.get(0),
            function(event) {
                var moveurl = event.target.getAttribute("href");
                if (moveurl == null) {
                    moveurl = jQuery(event.target).parent("a").attr("href");
                }
                return moveurl;
            }));

    var groupPopupShower = new MicroContentPopup.LiveShower(groupPopup);
    jQuery('.move_pipeline').live('click', function(event) {
        groupPopupShower.toggle_popup(event, this);
    });

</script>

