<div class="clone_pipeline">
    <%= render(:partial => "shared/flash_message") %>
    <% scope = {}; -%><% if @config_file_conflict -%>
    <div id="config_save_actions" class="flash">
        <button id="reload_config" class="reload_config primary"><%=l.string("RELOAD")-%></button>
        <label class="inline"><%=l.string("REFRESH_CONFIG")%></label>
    </div>
    <script type="text/javascript">
        Util.on_load(function() {
           jQuery("#reload_config").click(function() {
               var location = "<%= request.referer -%>";
               if (location.endsWith("#")) {
                   location = location.substring(0, location.length - 1);
               }
               window.location.href = location;
           });
        });
    </script>
<% end -%>
    <% form_for :pipeline_group, @pipeline_group, :url => pipeline_save_clone_path(:pipeline_name => params[:pipeline_name]), :html => {:method => :post, :id => "pipeline_clone_form", :onsubmit => "return AjaxForm.jquery_ajax_submit(this);"} do |f| %>
        <%= md5_field -%>
        <div class="form_content">
            <% scope = {}; -%><% if @errors && !@errors.empty? %>
    <div class="form_submit_errors">
        <div class="errors">
            <h3><%= l.string("GLOBAL_ERRORS_MESSAGE") -%></h3>
            <ul>
                <% @errors.each do |error| %>
                    <li class="error"><%= h(error.to_s) -%></li>
                <% end %>
            </ul>
        </div>
    </div>
<% end %>
            <div class="fieldset">
                <% scope = {:form => f, :pipeline => @pipeline, :pipeline_group => @pipeline_group, :pipeline_name_label => "NEW_PIPELINE_NAME"}; -%><div class="form_item">
    <div class="form_item_block required">
        <% scope[:form].fields_for(:pipeline, scope[:pipeline]) do |p_f| %>
            <%= required_label(p_f, com.thoughtworks.cruise.config.PipelineConfig::NAME, l.string(scope[:pipeline_name_label])) -%>
            <%= p_f.text_field com.thoughtworks.cruise.config.PipelineConfig::NAME, :class => "required pattern_match uniquePipelineName" -%>
            <%= error_message_on(scope[:pipeline], com.thoughtworks.cruise.config.PipelineConfig::NAME, :css_class => "form_error") %>
        <% end %>
    </div>
        <div class="form_item_block">
            <%= scope[:form].label com.thoughtworks.cruise.config.PipelineConfigs::GROUP, l.string("PIPELINE_GROUP_NAME") -%>
            <% if is_user_a_group_admin? %>
                <%= scope[:form].select com.thoughtworks.cruise.config.PipelineConfigs::GROUP, @groups_list, {:selected => @group_name} %>
            <% else %>  
                <%= scope[:form].text_field com.thoughtworks.cruise.config.PipelineConfigs::GROUP, :value => @group_name, :class => "required pattern_match", :id => 'pipeline_group_name_text_field' -%>
            <% end %>
            <%= error_message_on(scope[:pipeline_group], com.thoughtworks.cruise.config.PipelineConfigs::GROUP, :css_class => "form_error") %>
        </div>
</div>

<script type="text/javascript">
    var groups = <%= @groups_json %>
    jQuery("#pipeline_group_name_text_field").autocomplete(groups, {
        minChars: 0,
        width: 400,
        matchContains: "word",
        cacheLength: 0,
        formatItem: function(row, i, max) {
            return  row.group;
        },
        formatMatch: function(row, i, max) {
            return row.group;
        },
        formatResult: function(row) {
            return row.group;
        }
    });
</script>
            </div>
        </div>
        <% scope = {:submit_label => "SAVE"}; -%><div class="form_buttons actions">
    <%= submit_button(scope[:submit_label], :class => 'primary finish') %>
    <button class="left submit close_modalbox_control"><span><%= l.string('CANCEL') -%></span></button>
</div>
    <% end %>
</div>