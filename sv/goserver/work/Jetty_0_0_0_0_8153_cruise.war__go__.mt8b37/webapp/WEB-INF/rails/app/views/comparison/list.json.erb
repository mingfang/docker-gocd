{
    "html" : [
    <% if @pipeline_instances.empty? %>
    {
        "data": <%= render_json :text => "<div class='no_results'>No matching results</div>" -%>,
        "value": "-1",
        "result": ""
    }
    <% else %>
        <% @pipeline_instances.each_with_index do |pim, i| %>
            <%= i > 0 ? "," : "" %>
            {
                "data": "<% scope = {:pipeline => pim}; -%><div class=\"pipeline\">\n    <div class=\"stages autocomplete\">\n        <div class=\"pipeline_counter\">\n            <h3><%= json_escape((highlight(word_breaker(scope[:pipeline].getLabel().to_s), params[:q]))) -%></h3>\n        </div>\n        <div class=\"pipeline_details\">\n            <div class=\"stage_graphic clear_float\">\n                <% _scope = {:pipeline => scope[:pipeline], :disable_stage_bar_href => scope[:disable_stage_bar_href]}; -%><% _scope[:pipeline].getStageHistory().each do |sim_for_pipeline|
    _scope[:html_options] = stage_bar_options(sim_for_pipeline) %>\n    <div style='width: <%= json_escape((stage_width_percent(_scope[:pipeline].numberOfStages(), false, 97))) -%>' class=\"stage\">\n        <div class=\"stage_bar_wrapper\">\n            <% if placeholder_stage?(sim_for_pipeline) %>\n                <div <%= json_escape((_scope[:html_options])) -%>><%= json_escape((check_for_cancelled_contents(sim_for_pipeline.getState()))) -%></div>\n            <% else %>\n                <a href=\"<%= json_escape((_scope[:disable_stage_bar_href] ? '#' : stage_detail_path(:pipeline_name => _scope[:pipeline].getName(), :pipeline_counter => _scope[:pipeline].getCounter(), :stage_name => sim_for_pipeline.getName(), :stage_counter => sim_for_pipeline.getCounter()))) -%>\">\n                    <div <%= json_escape((_scope[:html_options])) -%>>\n                        <%= json_escape((check_for_cancelled_contents(sim_for_pipeline.getState()))) -%>\n                    </div>\n                </a>\n            <% end %>\n        </div>\n    </div>\n<% end %>\n<div class=\"triggered_by\">\n    <%= json_escape(("#{trigger_message_with_formatted_date_time(_scope[:pipeline].getScheduledDate(), _scope[:pipeline].getApprovedBy())}")) -%>\n</div>\n            </div>\n            <table class=\"change\">\n                <% scope[:pipeline].getBuildCause().getMaterialRevisions().each do |materialRevision| %>\n                    <% materialRevision.getModifications().each do |modification| %>\n                        <% scope[:revision] = modification.getRevision()
                           if materialRevision.isDependencyMaterialRevision()
                             scope[:upstream_label] = materialRevision.getLatestModification().getPipelineLabel()
                           else
                             scope[:comment] = modification.getComment()
                             scope[:modified_by] = modification.getUserDisplayName()
                           end
                           if any_match?(params[:q], scope[:revision], scope[:upstream_label], scope[:comment], scope[:modified_by])
                        %>\n                            <tr class=\"first\">\n                                <td class=\"label\">Revision:</td>\n                                <td><%= json_escape((highlight(scope[:revision], params[:q]))) -%></td>\n                            </tr>\n                            <% if materialRevision.isDependencyMaterialRevision() %>\n                                <tr>\n                                    <td class=\"label\">Comment:</td>\n                                    <td><%= json_escape((highlight(scope[:upstream_label], params[:q]))) -%></td>\n                                </tr>\n                            <% else %>\n                                <tr>\n                                    <td class=\"label\">Comment:</td>\n                                    <td class=\"comment\"><%= json_escape((highlight(render_comment(modification, scope[:pipeline].getName()), params[:q]))) -%></td>\n                                </tr>\n                                <tr>\n                                    <td class=\"label\">Modified&nbsp;by:</td>\n                                    <td><%= json_escape((highlight(scope[:modified_by], params[:q]))) -%> on <%= json_escape((modification.getModifiedTime().to_long_display_date_time)) -%></td>\n                                </tr>\n                            <% end %>\n                            <tr>\n                                <td>&nbsp;</td>\n                                <td>&nbsp;</td>\n                                <td>&nbsp;</td>\n                            </tr>\n                        <% end %>\n                    <% end %>\n                <% end %>\n            </table>\n        </div>\n    </div>\n</div>\n",
                "value": "<%= pim.getCounter %>",
                "result": "<%= pim.getLabel %>"
            }
        <% end %>
    <% end %>
    ]
}