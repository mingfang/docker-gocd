{
    "unused_feature" : {"html" : "<% scope = {}; -%><div id=\"unused_feature\" class=\"unused_feature\">\n    <% if @environments.empty? %>\n        <div class=\"pipeline_bundle environment\">\n            <div class=\"pipelines\">\n                <%= json_escape((content_wrapper_tag)) -%>\n                <div class=\"notification\">\n                    <p class=\"information\">\n                        <%= json_escape((l.string("NO_ENVIRONMENTS_CONFIGURED"))) -%>\n                        <%= json_escape((link_to l.string("MORE_INFORMATION"), url_for_path('/help/managing_environments.html'), :target => "_blank")) -%>\n                    </p>\n                </div>\n                <%= json_escape((end_content_wrapper)) -%>\n            </div>\n        </div>\n    <% end %>\n</div>" , "parent_id" : "unused_feature" },
    <% @environments.each_with_index do |environment, i| %>
        <%=env_dom_id(environment.name()).to_json%> : { "html" : "<% scope = {:environment => environment, :omit_pipeline => true}; -%><% scope[:omit_pipeline] ||= false %>\n<div class=\"pipeline_bundle environment\">\n    <div class=\"pipelines\">\n        <%= json_escape((content_wrapper_tag)) -%>\n        <h2 class=\"entity_title\">\n            <% if scope[:show_edit_environments] %>\n                <%= json_escape((link_to scope[:environment].name(), environment_show_path(:name => scope[:environment].name()))) -%>\n            <% else %>\n                <%= json_escape((scope[:environment].name())) -%>\n            <% end %>\n        </h2>\n        <% scope[:pipeline_models] = scope[:environment].getPipelineModels() %>\n        <% if scope[:pipeline_models].empty? %>\n            <span><%= json_escape((l.string('NO_PIPELINES_CONFIGURED_FOR_ENVIRONMENT'))) -%></span>\n        <% else %>\n            <% scope[:pipeline_models].each do |pipeline_model_in_environment| %>\n                <div id=\"<%= json_escape((env_pipeline_dom_id(pipeline_model_in_environment))) -%>\" class=\"pipeline hidereveal_collapsed\">\n                    <% unless scope[:omit_pipeline] %>\n                        <% cache(view_cache_key.forEnvironmentPipelineBox(pipeline_model_in_environment), :subkey => "environment_html") do %>\n                            <% _scope = {:pipeline_model => pipeline_model_in_environment, :pipeline_model_subkey => 'environment_html'}; -%><% _scope[:pipeline] = _scope[:pipeline_model].getLatestPipelineInstance()
   _scope[:pipeline_name] = _scope[:pipeline].getName() -%>\n\n<% __scope = {:pipeline_model => _scope[:pipeline_model], :show_compare => true}; -%><% __scope[:show_controls] ||= false
   __scope[:should_display_previously_blurb] ||= false
   __scope[:show_changes] ||= false
   __scope[:pipeline_name] = __scope[:pipeline_model].getName() -%>\n<div class=\"pipeline_header\">\n    <%
        h3_class = ""
        if __scope[:pipeline_model].hasNewRevisions() && !__scope[:show_changes]
            h3_class = " has_new_materials"
        end
    %>\n    <div class=\"pipeline_actions\">\n        <% ___scope = {:pipeline_model => __scope[:pipeline_model]}; -%><% ___scope[:latestPIM] = ___scope[:pipeline_model].getLatestPipelineInstance() -%>\n<% if ___scope[:latestPIM].isCurrentlyLocked() %>\n    <% if ___scope[:latestPIM].canUnlock() -%>\n        <span class=\"locked_instance click_to_unlock\" id='unlock' title=\"Click to unlock this pipeline\">\n            <%= json_escape((blocking_link_to_remote "&nbsp;", :method => :post, :url => api_pipeline_action_path(:pipeline_name =>  ___scope[:pipeline_model].getName(), :action => 'releaseLock'),
                                        :update => {:failure => "message_pane", :success => 'function(){}'}, :before => "spinny('unlock');")) -%>\n        </span>\n    <% else -%>\n        <span class=\"locked_instance locked\" title=\"This pipeline is locked\">\n          &nbsp;\n        </span>\n    <% end -%>\n<% end -%>\n        <%- if __scope[:pipeline_model].canAdminister() -%>\n            <%= json_escape((link_to "", pipeline_edit_path(:pipeline_name => __scope[:pipeline_name], :current_tab => "general"), :class => 'icon16 setting')) -%>\n        <%- end -%>\n    </div>\n    <div class=\"pipeline_name_link\">\n        <h3 class=\"title entity_title<%= json_escape((h3_class)) -%> \">\n            <%= json_escape((link_to(__scope[:pipeline_name], url_for_pipeline(__scope[:pipeline_name])))) -%>\n        </h3>\n    </div>\n</div>\n\n<div class=\"alert\" id=\"trigger-result-<%= json_escape((__scope[:pipeline_name])) -%>\"></div>\n\n<% __scope[:pipeline_model].getActivePipelineInstances().each do |active_pipeline_in_pipeline| -%>\n    <div class=\"pipeline_instance\">\n        <% if !active_pipeline_in_pipeline.hasHistoricalData() %>\n            <div class='status'>\n                <span class='message'>\n                  No historical data\n                </span>\n            </div>\n        <% else %>\n            <div class='status details'>\n                <% ___scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><% ___scope[:rendering_gadget] ||= false %>\n\n<div class=\"label\">Label:<%
       #check to see if we are currently waiting on scheduling (aka loading)
       if ___scope[:active_pipeline_in_pipeline].getLabel() == 'TBD' -%>\n        <img src=\"images/new/ajax_loader_small.gif\" alt=\"Scheduling...\"/>\n    <% else -%>\n        <a href=\"<%= json_escape((url_for_pipeline_value_stream_map(___scope[:active_pipeline_in_pipeline], :only_path => !___scope[:rendering_gadget]))) -%>\" <%= json_escape((___scope[:rendering_gadget] ? "target='_blank'" : "")) -%> title=\"<%= json_escape((___scope[:active_pipeline_in_pipeline].getLabel())) -%>\"><%= json_escape((truncate(___scope[:active_pipeline_in_pipeline].getLabel(), :length => 40))) -%></a>\n    <% end -%>\n</div>\n\n\n                <% if __scope[:show_compare] %>\n                <span class=\"compare_pipeline dashboard\" >\n                    <%= json_escape((link_to("#{l.string("COMPARE")}",
                                    compare_pipelines_path(:pipeline_name => __scope[:pipeline_name], :from_counter => active_pipeline_in_pipeline.getCounter() - 1, :to_counter => active_pipeline_in_pipeline.getCounter()),
                                    :title => l.string("TOOLTIP_COMPARE_WITH_PREVIOUS")))) -%>\n                </span>\n                <% end %>\n\n                <% if __scope[:show_changes] && !(__scope[:revisions] = active_pipeline_in_pipeline.getCurrentRevisions()).empty?
                    __scope[:instance_identifier] = pipeline_instance_identifier(active_pipeline_in_pipeline)
                    __scope[:changes_id] = pipeline_build_cause_popup_id(active_pipeline_in_pipeline)
                    __scope[:show_changes_id] ="show_changes_#{__scope[:instance_identifier]}"
                -%>\n                    <% if __scope[:show_compare] %>\n                        <span class=\"separator\">&nbsp;</span>\n                    <% end %>\n\n                    <span class=\"changes_button_wrapper\">\n                        <%= json_escape((link_to(l.string("CHANGES"), build_cause_path(:pipeline_name => active_pipeline_in_pipeline.getName(), :pipeline_counter => active_pipeline_in_pipeline.getCounter()), :id => __scope[:show_changes_id], :class => "show_panel submit_small dashboard_build_cause_button"))) -%>\n                    </span>\n\n                    <script type=\"text/javascript\">\n                    </script>\n                <% end -%>\n                <% ___scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><div class=\"pipeline_instance_details\">\n    <div class=\"schedule_time\" title=\"<%= json_escape((___scope[:active_pipeline_in_pipeline].getScheduledDate())) -%>\">\n        <%= json_escape((trigger_message(___scope[:active_pipeline_in_pipeline].getScheduledDate().getTime(), ___scope[:active_pipeline_in_pipeline]))) -%>\n    </div>\n    <% ____scope = {:pipeline => ___scope[:active_pipeline_in_pipeline],
                                                                         :total_width => 20.0,
                                                                         :rendering_gadget => ___scope[:rendering_gadget] }; -%><div class=\"stages\">\n    <div class=\"latest_stage\">\n            <%= json_escape((____scope[:pipeline].getPipelineStatusMessage())) -%>\n    </div>\n\n    <% ____scope[:pipeline].getStageHistory().each do |stage_in_stage_bar| %>\n        <% _____scope = {:pipeline => ____scope[:pipeline],
                                           :stage => stage_in_stage_bar,
                                           :total_width => ____scope[:total_width],
                                           :rendering_gadget => ____scope[:rendering_gadget]}; -%><% _____scope[:rendering_gadget] ||= false %>\n<% if placeholder_stage?(_____scope[:stage]) -%>\n    <span class='stage'>\n        <% ______scope = {:pipeline => _____scope[:pipeline], :stage => _____scope[:stage], :total_width => _____scope[:total_width]}; -%><%
   ______scope[:state] = ______scope[:stage].getState()
   ______scope[:stage_name] = ______scope[:stage].getName()
   ______scope[:last_run_stage] = ______scope[:pipeline].isLatestStage(______scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((______scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((______scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [______scope[:stage_name], ______scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(______scope[:pipeline].getStageHistory().size(), ______scope[:last_run_stage], ______scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(______scope[:state]))) -%>\n    </div>\n</div>\n    </span>\n<% else -%>\n    <a href='<%= json_escape((stage_detail_path(:pipeline_name => _____scope[:pipeline].getName(),
                                   :pipeline_counter => _____scope[:pipeline].getCounter(),
                                   :stage_name => _____scope[:stage].getName(),
                                   :stage_counter => _____scope[:stage].getCounter(),
                                   :only_path => !_____scope[:rendering_gadget]))) -%>' class='stage' <%= json_escape((_____scope[:rendering_gadget] ? "target='_blank'" : "")) -%>>\n        <% ______scope = {:pipeline => _____scope[:pipeline], :stage => _____scope[:stage], :total_width => _____scope[:total_width]}; -%><%
   ______scope[:state] = ______scope[:stage].getState()
   ______scope[:stage_name] = ______scope[:stage].getName()
   ______scope[:last_run_stage] = ______scope[:pipeline].isLatestStage(______scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((______scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((______scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [______scope[:stage_name], ______scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(______scope[:pipeline].getStageHistory().size(), ______scope[:last_run_stage], ______scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(______scope[:state]))) -%>\n    </div>\n</div>\n    </a>\n<% end -%>\n    <% end %>\n</div>\n\n</div>\n\n            </div>\n            <% ___scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline, :should_display_previously_blurb =>  __scope[:should_display_previously_blurb]}; -%><% ___scope[:rendering_gadget] ||= false %>\n<div class=\"previously_wrapper\">\n    <% if ___scope[:should_display_previously_blurb] && ___scope[:active_pipeline_in_pipeline].isAnyStageActive() -%>\n        <% ___scope[:active_stage] = ___scope[:active_pipeline_in_pipeline].activeStage() -%>\n        <% if ___scope[:active_stage].hasPreviousStage() -%>\n            <div class=\"previously\">\n                <span class=\"label\"><%= json_escape((l.string("Previously Blurb"))) -%></span>\n                <% ___scope[:previous_stage] = ___scope[:active_stage].getPreviousStage() -%>\n                <% ___scope[:previous_stage_identifier] = ___scope[:previous_stage].getIdentifier() -%>\n                <% ___scope[:stage_result] = ___scope[:previous_stage].getResult() -%>\n                <a class=\"result\" href=\"<%= json_escape((stage_detail_path_for_identifier(___scope[:previous_stage_identifier], :only_path => !___scope[:rendering_gadget]))) -%>\" <%= json_escape((___scope[:rendering_gadget] ? "target='_blank'" : "")) -%> \n                   title=\"<%= json_escape((___scope[:previous_stage_identifier].getPipelineLabel())) -%>\">\n                    <span class=\"color_code_small <%= json_escape((___scope[:stage_result])) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(___scope[:stage_result]))) -%>\n                    </span> <%= json_escape((___scope[:stage_result])) -%>\n                </a>\n            </div>\n        <% end -%>\n    <% end -%>\n</div>\n\n        <% end -%>\n    </div>\n<% end -%>\n\n<div class=\"pipeline_operations\">\n    <% if __scope[:show_controls] && __scope[:pipeline_model].canOperate() -%>\n        <% __scope[:trigger_label] = l.string('TRIGGER')
           __scope[:trigger_with_option_label] = l.string('TRIGGER_WITH_OPTIONS')
        -%>\n        <% ___scope = {:pipeline_model=> __scope[:pipeline_model], :label=>"#{__scope[:trigger_label]}"}; -%><% ___scope[:pipeline] = ___scope[:pipeline_model].getLatestPipelineInstance() -%>\n<%= json_escape((pipeline_operations_blocking_form_remote_tag(:url => api_pipeline_action_path(:pipeline_name => ___scope[:pipeline].getName(), :action => "schedule"),
                    :html => {
                        :onsubmit => "PipelineOperations.onTrigger(this, '#{___scope[:pipeline].getName()}', '#{api_pipeline_action_path(:pipeline_name => ___scope[:pipeline].getName(), :action => "schedule")}'); return false;"
                    }))) -%>\n    <div class='operate trigger_wrapper'>\n        <%= json_escape((submit_button(___scope[:label], {:type=> 'image', :disabled => !___scope[:pipeline_model].canForce(), :id => "deploy-#{___scope[:pipeline].getName()}"}))) -%>\n    </div>\n<%= json_escape((end_form_tag)) -%>\n\n        <% ___scope = {:pipeline => __scope[:pipeline_model].getLatestPipelineInstance(),
                                                                                                 :label => "#{__scope[:trigger_with_option_label]}",
                                                                                                 :can_trigger => __scope[:pipeline_model].canForce(),
                                                                                                 :has_upstream_material => false}; -%><%= json_escape((pipeline_operations_blocking_form_remote_tag :url => { :controller => 'pipelines', :action => 'show_for_trigger' },
                             :html => {
                                     :onsubmit => "PipelineOperations.onTriggerWithOptions(this, '#{___scope[:pipeline].getName()}', '#{l.string('TRIGGER')}', '#{pipeline_show_with_option_path}'); return false;"
                             })) -%>\n    <input type=\"hidden\" name=\"pipeline_name\" value=\"<%= json_escape((___scope[:pipeline_name]=___scope[:pipeline].getName())) -%>\"/>\n    <div class='operate trigger_with_options_wrapper'>\n        <%= json_escape((submit_button(___scope[:label], :type => 'image', :disabled => !___scope[:can_trigger], :id => "deploy-with-options-#{___scope[:pipeline].getName()}"))) -%>\n    </div>\n    <% if ___scope[:has_upstream_material] %>\n        <input type=\"hidden\" name=\"pegged_revisions[<%= json_escape((___scope[:pegged_pipeline])) -%>]\" value=\"<%= json_escape((___scope[:pegged_revision])) -%>\"/>\n    <% end%>\n<%= json_escape((end_form_tag)) -%>\n        <% ___scope = {:pause_info => __scope[:pipeline_model].getPausedInfo(), :pipeline_name => __scope[:pipeline_name]}; -%><% if ___scope[:pause_info].isPaused() %>\n    <form action=\"<%= json_escape((unpause_pipeline_path(:pipeline_name => ___scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onUnPause(this, '<%= json_escape((___scope[:pipeline_name])) -%>', '<%= json_escape((unpause_pipeline_path(___scope[:pipeline_name]))) -%>'); return false;\">\n        <div class='operate unpause_wrapper'>\n            <%= json_escape((submit_button("Unpause", :type=> "image", :class => 'primary', :id => "unpause-#{___scope[:pipeline_name]}"))) -%>\n        </div>\n    </form>\n<% else
    ___scope[:pause_info_id] = "pause-info-#{___scope[:pipeline_name]}"
    ___scope[:pause_onclick] = "Modalbox.show($(\"#{___scope[:pause_info_id]}\"),{title: \"Pause pipeline: #{___scope[:pipeline_name]} \",overlayClose:false})"
-%>\n    <div class='operate pause_wrapper'>\n        <%= json_escape((submit_button("Pause", {:type=> "image", :id => "confirm-pause-#{___scope[:pipeline_name]}", :onclick => "#{___scope[:pause_onclick]}"}))) -%>\n    </div>\n    <div id=\"<%= json_escape((___scope[:pause_info_id])) -%>\" style=\"display:none\">\n        <form action=\"<%= json_escape((pause_pipeline_path(:pipeline_name => ___scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onPause(this, '<%= json_escape((___scope[:pipeline_name])) -%>', '<%= json_escape((pause_pipeline_path(___scope[:pipeline_name]))) -%>'); return false;\">\n            <div class=\"sub_tab_container\">\n                <div class='pause_reason'>\n                    Specify a reason for pausing schedule on pipeline '<%= json_escape((___scope[:pipeline_name])) -%>': <input type=\"text\" name=\"pauseCause\" maxlength=\"255\"/>\n                </div>\n            </div>\n            <div class=\"actions\">\n                <%= json_escape((submit_button("Ok", :class=> "primary", :id => "pause-#{___scope[:pipeline_name]}"))) -%>\n                <%= json_escape((submit_button("Close", :onclick => "Modalbox.hide()", :type => "button"))) -%>\n            </div>\n        </form>\n    </div>\n<% end -%>\n    <% end -%>\n</div>\n<% ___scope = {:pause_info => __scope[:pipeline_model].getPausedInfo()}; -%><% if ___scope[:pause_info].isPaused() %>\n    <span class=\"pause_description paused_by\">Paused by <%= json_escape((___scope[:pause_info].getPauseBy())) -%> </span>\n    <span class=\"pause_description pause_message\">(<%= json_escape((h(___scope[:pause_info].getPauseCause()))) -%>)</span>\n<% end %>\n\n<% if (_scope[:material_count] = _scope[:pipeline].getMaterials().size()) > 0 -%>\n    <%
        has_new_materials_class = ""
        if _scope[:pipeline_model].hasNewRevisions()
            has_new_materials_class = "has_new_materials"
        end
    %>\n    <div class=\"deployed_revisions <%= json_escape((has_new_materials_class)) -%>\">\n        <a class='materials_count hidereveal_expander' id=\"<%= json_escape((_scope[:show_hide_link] = _scope[:pipeline_name] + '_show_hide_revisions')) -%>\"><%= json_escape((_scope[:material_count])) -%> Material(s):</a>\n        <table style='width: 100%' class=\"materials hidereveal_content list_table\">\n            <tr>\n                <th style='width: 10%' class=\"noshow\"></th>\n                <th style='width: 30%' class=\"material_name\">Material</th>\n                <th style='width: 30%' class=\"revision_number\">Revision</th>\n                <th style='width: 30%' class=\"date\">Check-in/trigger</th>\n            </tr>\n            <% _scope[:pipeline].getMaterials().each do |material_in_env_pipeline|
                _scope[:revision] = _scope[:pipeline].findCurrentMaterialRevisionForUI(material_in_env_pipeline) -%>\n                <tr <% if _scope[:pipeline].hasNewRevisions(material_in_env_pipeline) -%>class=\"revision-row\"<% end -%> >\n                    <td class=\"noshow\">\n                    <% if _scope[:pipeline].hasNewRevisions(material_in_env_pipeline) -%>                            \n                        <img class=\"has_new_material_revisions\" src=\"<%= json_escape((image_path('/images/icon-12-alert.png'))) -%>\">\n                    <% end -%>\n                    </td>\n                    <td class=\"material_name\" title=\"<%= json_escape((material_in_env_pipeline.getDisplayName())) -%>\">\n                        <%= json_escape((smart_word_breaker(material_in_env_pipeline.getTruncatedDisplayName()))) -%>\n                    </td>\n                    <td class=\"revision_number\" title=\"<%= json_escape((_scope[:revision] ? _scope[:revision].getLatestRevisionString() : "N/A")) -%>\">\n                        <%= json_escape((_scope[:revision] ? smart_word_breaker(_scope[:revision].getLatestShortRevision()) : "N/A")) -%>\n                    </td>\n                    <td class=\"date\" title=\"<%= json_escape((_scope[:revision] ? _scope[:revision].getDateOfLatestModification().iso8601 : "N/A")) -%>\">\n                        <%= json_escape((_scope[:revision] ? _scope[:revision].getDateOfLatestModification().display_time : "N/A")) -%>\n                    </td>\n                </tr>\n            <% end %>\n        </table>\n    </div>\n    <%- _scope[:pipeline_model_id] = env_pipeline_dom_id(_scope[:pipeline_model]) -%>\n    <script type='text/javascript'>Util.on_load(function() { AjaxRefreshers.main().afterRefreshOf('<%= json_escape((_scope[:pipeline_model_id])) -%>', function() { make_collapsable('<%= json_escape((_scope[:pipeline_model_id])) -%>'); });});</script>\n<% end %>\n<div class='deploy'>\n    <% if _scope[:pipeline_model].hasNewRevisions() || _scope[:pipeline_model].hasNeverCheckedForRevisions() -%>\n        <% __scope = {:pipeline_model=>_scope[:pipeline_model], :label=>"Deploy Latest"}; -%><% __scope[:pipeline] = __scope[:pipeline_model].getLatestPipelineInstance() -%>\n<%= json_escape((pipeline_operations_blocking_form_remote_tag(:url => api_pipeline_action_path(:pipeline_name => __scope[:pipeline].getName(), :action => "schedule"),
                    :html => {
                        :onsubmit => "PipelineOperations.onTrigger(this, '#{__scope[:pipeline].getName()}', '#{api_pipeline_action_path(:pipeline_name => __scope[:pipeline].getName(), :action => "schedule")}'); return false;"
                    }))) -%>\n    <div class='operate trigger_wrapper'>\n        <%= json_escape((submit_button(__scope[:label], {:type=> 'image', :disabled => !__scope[:pipeline_model].canForce(), :id => "deploy-#{__scope[:pipeline].getName()}"}))) -%>\n    </div>\n<%= json_escape((end_form_tag)) -%>\n    <% end -%>\n    <%= json_escape((blocking_form_remote_tag :url => { :controller => 'pipelines', :action => 'show' },
                       :success => "Modalbox.show(request.responseText, { title: '#{_scope[:pipeline_name]} - Deploy', overlayClose: false, width: 850, height: 525, slideDownDuration: 0, overlayDuration: 0});")) -%>\n        <div class='operate trigger_with_options_wrapper'>\n            <input type=\"hidden\" name=\"pipeline_name\" value=\"<%= json_escape((_scope[:pipeline_name])) -%>\"/>\n            <%= json_escape((submit_button(l.string("DEPLOY_SPECIFIC_REVISION"), :type => 'image', :class=> "change_revision"))) -%>\n        </div>\n    <%= json_escape((end_form_tag)) -%>\n</div>\n                        <% end %>\n                    <% end %>\n                </div>\n                <div class=\"divider\"></div>\n            <% end %>\n        <% end %>\n        <%= json_escape((end_content_wrapper)) -%>\n    </div>\n</div>\n" , "parent_id" : "ajax_environments", "index" : <%= i %>, "type" : "group_of_pipelines" },
    <% end %>
    <% @environments.each do |environment| %>
        <% models = environment.getPipelineModels()
        models.each_with_index do |pipeline_model, j| %>
            <%is_last = is_last(models, pipeline_model) && is_last(@environments, environment) %>
            <%- environment_id = env_dom_id(environment.name()) -%>
            <% cache(view_cache_key.forEnvironmentPipelineBox(pipeline_model), :subkey => "environment_json_#{environment_id}") do %>
                <%=env_pipeline_dom_id(pipeline_model).to_json%> : { "html" : "<% scope = {:pipeline_model => pipeline_model}; -%><% scope[:pipeline] = scope[:pipeline_model].getLatestPipelineInstance()
   scope[:pipeline_name] = scope[:pipeline].getName() -%>\n\n<% _scope = {:pipeline_model => scope[:pipeline_model], :show_compare => true}; -%><% _scope[:show_controls] ||= false
   _scope[:should_display_previously_blurb] ||= false
   _scope[:show_changes] ||= false
   _scope[:pipeline_name] = _scope[:pipeline_model].getName() -%>\n<div class=\"pipeline_header\">\n    <%
        h3_class = ""
        if _scope[:pipeline_model].hasNewRevisions() && !_scope[:show_changes]
            h3_class = " has_new_materials"
        end
    %>\n    <div class=\"pipeline_actions\">\n        <% __scope = {:pipeline_model => _scope[:pipeline_model]}; -%><% __scope[:latestPIM] = __scope[:pipeline_model].getLatestPipelineInstance() -%>\n<% if __scope[:latestPIM].isCurrentlyLocked() %>\n    <% if __scope[:latestPIM].canUnlock() -%>\n        <span class=\"locked_instance click_to_unlock\" id='unlock' title=\"Click to unlock this pipeline\">\n            <%= json_escape((blocking_link_to_remote "&nbsp;", :method => :post, :url => api_pipeline_action_path(:pipeline_name =>  __scope[:pipeline_model].getName(), :action => 'releaseLock'),
                                        :update => {:failure => "message_pane", :success => 'function(){}'}, :before => "spinny('unlock');")) -%>\n        </span>\n    <% else -%>\n        <span class=\"locked_instance locked\" title=\"This pipeline is locked\">\n          &nbsp;\n        </span>\n    <% end -%>\n<% end -%>\n        <%- if _scope[:pipeline_model].canAdminister() -%>\n            <%= json_escape((link_to "", pipeline_edit_path(:pipeline_name => _scope[:pipeline_name], :current_tab => "general"), :class => 'icon16 setting')) -%>\n        <%- end -%>\n    </div>\n    <div class=\"pipeline_name_link\">\n        <h3 class=\"title entity_title<%= json_escape((h3_class)) -%> \">\n            <%= json_escape((link_to(_scope[:pipeline_name], url_for_pipeline(_scope[:pipeline_name])))) -%>\n        </h3>\n    </div>\n</div>\n\n<div class=\"alert\" id=\"trigger-result-<%= json_escape((_scope[:pipeline_name])) -%>\"></div>\n\n<% _scope[:pipeline_model].getActivePipelineInstances().each do |active_pipeline_in_pipeline| -%>\n    <div class=\"pipeline_instance\">\n        <% if !active_pipeline_in_pipeline.hasHistoricalData() %>\n            <div class='status'>\n                <span class='message'>\n                  No historical data\n                </span>\n            </div>\n        <% else %>\n            <div class='status details'>\n                <% __scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><% __scope[:rendering_gadget] ||= false %>\n\n<div class=\"label\">Label:<%
       #check to see if we are currently waiting on scheduling (aka loading)
       if __scope[:active_pipeline_in_pipeline].getLabel() == 'TBD' -%>\n        <img src=\"images/new/ajax_loader_small.gif\" alt=\"Scheduling...\"/>\n    <% else -%>\n        <a href=\"<%= json_escape((url_for_pipeline_value_stream_map(__scope[:active_pipeline_in_pipeline], :only_path => !__scope[:rendering_gadget]))) -%>\" <%= json_escape((__scope[:rendering_gadget] ? "target='_blank'" : "")) -%> title=\"<%= json_escape((__scope[:active_pipeline_in_pipeline].getLabel())) -%>\"><%= json_escape((truncate(__scope[:active_pipeline_in_pipeline].getLabel(), :length => 40))) -%></a>\n    <% end -%>\n</div>\n\n\n                <% if _scope[:show_compare] %>\n                <span class=\"compare_pipeline dashboard\" >\n                    <%= json_escape((link_to("#{l.string("COMPARE")}",
                                    compare_pipelines_path(:pipeline_name => _scope[:pipeline_name], :from_counter => active_pipeline_in_pipeline.getCounter() - 1, :to_counter => active_pipeline_in_pipeline.getCounter()),
                                    :title => l.string("TOOLTIP_COMPARE_WITH_PREVIOUS")))) -%>\n                </span>\n                <% end %>\n\n                <% if _scope[:show_changes] && !(_scope[:revisions] = active_pipeline_in_pipeline.getCurrentRevisions()).empty?
                    _scope[:instance_identifier] = pipeline_instance_identifier(active_pipeline_in_pipeline)
                    _scope[:changes_id] = pipeline_build_cause_popup_id(active_pipeline_in_pipeline)
                    _scope[:show_changes_id] ="show_changes_#{_scope[:instance_identifier]}"
                -%>\n                    <% if _scope[:show_compare] %>\n                        <span class=\"separator\">&nbsp;</span>\n                    <% end %>\n\n                    <span class=\"changes_button_wrapper\">\n                        <%= json_escape((link_to(l.string("CHANGES"), build_cause_path(:pipeline_name => active_pipeline_in_pipeline.getName(), :pipeline_counter => active_pipeline_in_pipeline.getCounter()), :id => _scope[:show_changes_id], :class => "show_panel submit_small dashboard_build_cause_button"))) -%>\n                    </span>\n\n                    <script type=\"text/javascript\">\n                    </script>\n                <% end -%>\n                <% __scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><div class=\"pipeline_instance_details\">\n    <div class=\"schedule_time\" title=\"<%= json_escape((__scope[:active_pipeline_in_pipeline].getScheduledDate())) -%>\">\n        <%= json_escape((trigger_message(__scope[:active_pipeline_in_pipeline].getScheduledDate().getTime(), __scope[:active_pipeline_in_pipeline]))) -%>\n    </div>\n    <% ___scope = {:pipeline => __scope[:active_pipeline_in_pipeline],
                                                                         :total_width => 20.0,
                                                                         :rendering_gadget => __scope[:rendering_gadget] }; -%><div class=\"stages\">\n    <div class=\"latest_stage\">\n            <%= json_escape((___scope[:pipeline].getPipelineStatusMessage())) -%>\n    </div>\n\n    <% ___scope[:pipeline].getStageHistory().each do |stage_in_stage_bar| %>\n        <% ____scope = {:pipeline => ___scope[:pipeline],
                                           :stage => stage_in_stage_bar,
                                           :total_width => ___scope[:total_width],
                                           :rendering_gadget => ___scope[:rendering_gadget]}; -%><% ____scope[:rendering_gadget] ||= false %>\n<% if placeholder_stage?(____scope[:stage]) -%>\n    <span class='stage'>\n        <% _____scope = {:pipeline => ____scope[:pipeline], :stage => ____scope[:stage], :total_width => ____scope[:total_width]}; -%><%
   _____scope[:state] = _____scope[:stage].getState()
   _____scope[:stage_name] = _____scope[:stage].getName()
   _____scope[:last_run_stage] = _____scope[:pipeline].isLatestStage(_____scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((_____scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((_____scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [_____scope[:stage_name], _____scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(_____scope[:pipeline].getStageHistory().size(), _____scope[:last_run_stage], _____scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(_____scope[:state]))) -%>\n    </div>\n</div>\n    </span>\n<% else -%>\n    <a href='<%= json_escape((stage_detail_path(:pipeline_name => ____scope[:pipeline].getName(),
                                   :pipeline_counter => ____scope[:pipeline].getCounter(),
                                   :stage_name => ____scope[:stage].getName(),
                                   :stage_counter => ____scope[:stage].getCounter(),
                                   :only_path => !____scope[:rendering_gadget]))) -%>' class='stage' <%= json_escape((____scope[:rendering_gadget] ? "target='_blank'" : "")) -%>>\n        <% _____scope = {:pipeline => ____scope[:pipeline], :stage => ____scope[:stage], :total_width => ____scope[:total_width]}; -%><%
   _____scope[:state] = _____scope[:stage].getState()
   _____scope[:stage_name] = _____scope[:stage].getName()
   _____scope[:last_run_stage] = _____scope[:pipeline].isLatestStage(_____scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((_____scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((_____scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [_____scope[:stage_name], _____scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(_____scope[:pipeline].getStageHistory().size(), _____scope[:last_run_stage], _____scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(_____scope[:state]))) -%>\n    </div>\n</div>\n    </a>\n<% end -%>\n    <% end %>\n</div>\n\n</div>\n\n            </div>\n            <% __scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline, :should_display_previously_blurb =>  _scope[:should_display_previously_blurb]}; -%><% __scope[:rendering_gadget] ||= false %>\n<div class=\"previously_wrapper\">\n    <% if __scope[:should_display_previously_blurb] && __scope[:active_pipeline_in_pipeline].isAnyStageActive() -%>\n        <% __scope[:active_stage] = __scope[:active_pipeline_in_pipeline].activeStage() -%>\n        <% if __scope[:active_stage].hasPreviousStage() -%>\n            <div class=\"previously\">\n                <span class=\"label\"><%= json_escape((l.string("Previously Blurb"))) -%></span>\n                <% __scope[:previous_stage] = __scope[:active_stage].getPreviousStage() -%>\n                <% __scope[:previous_stage_identifier] = __scope[:previous_stage].getIdentifier() -%>\n                <% __scope[:stage_result] = __scope[:previous_stage].getResult() -%>\n                <a class=\"result\" href=\"<%= json_escape((stage_detail_path_for_identifier(__scope[:previous_stage_identifier], :only_path => !__scope[:rendering_gadget]))) -%>\" <%= json_escape((__scope[:rendering_gadget] ? "target='_blank'" : "")) -%> \n                   title=\"<%= json_escape((__scope[:previous_stage_identifier].getPipelineLabel())) -%>\">\n                    <span class=\"color_code_small <%= json_escape((__scope[:stage_result])) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(__scope[:stage_result]))) -%>\n                    </span> <%= json_escape((__scope[:stage_result])) -%>\n                </a>\n            </div>\n        <% end -%>\n    <% end -%>\n</div>\n\n        <% end -%>\n    </div>\n<% end -%>\n\n<div class=\"pipeline_operations\">\n    <% if _scope[:show_controls] && _scope[:pipeline_model].canOperate() -%>\n        <% _scope[:trigger_label] = l.string('TRIGGER')
           _scope[:trigger_with_option_label] = l.string('TRIGGER_WITH_OPTIONS')
        -%>\n        <% __scope = {:pipeline_model=> _scope[:pipeline_model], :label=>"#{_scope[:trigger_label]}"}; -%><% __scope[:pipeline] = __scope[:pipeline_model].getLatestPipelineInstance() -%>\n<%= json_escape((pipeline_operations_blocking_form_remote_tag(:url => api_pipeline_action_path(:pipeline_name => __scope[:pipeline].getName(), :action => "schedule"),
                    :html => {
                        :onsubmit => "PipelineOperations.onTrigger(this, '#{__scope[:pipeline].getName()}', '#{api_pipeline_action_path(:pipeline_name => __scope[:pipeline].getName(), :action => "schedule")}'); return false;"
                    }))) -%>\n    <div class='operate trigger_wrapper'>\n        <%= json_escape((submit_button(__scope[:label], {:type=> 'image', :disabled => !__scope[:pipeline_model].canForce(), :id => "deploy-#{__scope[:pipeline].getName()}"}))) -%>\n    </div>\n<%= json_escape((end_form_tag)) -%>\n\n        <% __scope = {:pipeline => _scope[:pipeline_model].getLatestPipelineInstance(),
                                                                                                 :label => "#{_scope[:trigger_with_option_label]}",
                                                                                                 :can_trigger => _scope[:pipeline_model].canForce(),
                                                                                                 :has_upstream_material => false}; -%><%= json_escape((pipeline_operations_blocking_form_remote_tag :url => { :controller => 'pipelines', :action => 'show_for_trigger' },
                             :html => {
                                     :onsubmit => "PipelineOperations.onTriggerWithOptions(this, '#{__scope[:pipeline].getName()}', '#{l.string('TRIGGER')}', '#{pipeline_show_with_option_path}'); return false;"
                             })) -%>\n    <input type=\"hidden\" name=\"pipeline_name\" value=\"<%= json_escape((__scope[:pipeline_name]=__scope[:pipeline].getName())) -%>\"/>\n    <div class='operate trigger_with_options_wrapper'>\n        <%= json_escape((submit_button(__scope[:label], :type => 'image', :disabled => !__scope[:can_trigger], :id => "deploy-with-options-#{__scope[:pipeline].getName()}"))) -%>\n    </div>\n    <% if __scope[:has_upstream_material] %>\n        <input type=\"hidden\" name=\"pegged_revisions[<%= json_escape((__scope[:pegged_pipeline])) -%>]\" value=\"<%= json_escape((__scope[:pegged_revision])) -%>\"/>\n    <% end%>\n<%= json_escape((end_form_tag)) -%>\n        <% __scope = {:pause_info => _scope[:pipeline_model].getPausedInfo(), :pipeline_name => _scope[:pipeline_name]}; -%><% if __scope[:pause_info].isPaused() %>\n    <form action=\"<%= json_escape((unpause_pipeline_path(:pipeline_name => __scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onUnPause(this, '<%= json_escape((__scope[:pipeline_name])) -%>', '<%= json_escape((unpause_pipeline_path(__scope[:pipeline_name]))) -%>'); return false;\">\n        <div class='operate unpause_wrapper'>\n            <%= json_escape((submit_button("Unpause", :type=> "image", :class => 'primary', :id => "unpause-#{__scope[:pipeline_name]}"))) -%>\n        </div>\n    </form>\n<% else
    __scope[:pause_info_id] = "pause-info-#{__scope[:pipeline_name]}"
    __scope[:pause_onclick] = "Modalbox.show($(\"#{__scope[:pause_info_id]}\"),{title: \"Pause pipeline: #{__scope[:pipeline_name]} \",overlayClose:false})"
-%>\n    <div class='operate pause_wrapper'>\n        <%= json_escape((submit_button("Pause", {:type=> "image", :id => "confirm-pause-#{__scope[:pipeline_name]}", :onclick => "#{__scope[:pause_onclick]}"}))) -%>\n    </div>\n    <div id=\"<%= json_escape((__scope[:pause_info_id])) -%>\" style=\"display:none\">\n        <form action=\"<%= json_escape((pause_pipeline_path(:pipeline_name => __scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onPause(this, '<%= json_escape((__scope[:pipeline_name])) -%>', '<%= json_escape((pause_pipeline_path(__scope[:pipeline_name]))) -%>'); return false;\">\n            <div class=\"sub_tab_container\">\n                <div class='pause_reason'>\n                    Specify a reason for pausing schedule on pipeline '<%= json_escape((__scope[:pipeline_name])) -%>': <input type=\"text\" name=\"pauseCause\" maxlength=\"255\"/>\n                </div>\n            </div>\n            <div class=\"actions\">\n                <%= json_escape((submit_button("Ok", :class=> "primary", :id => "pause-#{__scope[:pipeline_name]}"))) -%>\n                <%= json_escape((submit_button("Close", :onclick => "Modalbox.hide()", :type => "button"))) -%>\n            </div>\n        </form>\n    </div>\n<% end -%>\n    <% end -%>\n</div>\n<% __scope = {:pause_info => _scope[:pipeline_model].getPausedInfo()}; -%><% if __scope[:pause_info].isPaused() %>\n    <span class=\"pause_description paused_by\">Paused by <%= json_escape((__scope[:pause_info].getPauseBy())) -%> </span>\n    <span class=\"pause_description pause_message\">(<%= json_escape((h(__scope[:pause_info].getPauseCause()))) -%>)</span>\n<% end %>\n\n<% if (scope[:material_count] = scope[:pipeline].getMaterials().size()) > 0 -%>\n    <%
        has_new_materials_class = ""
        if scope[:pipeline_model].hasNewRevisions()
            has_new_materials_class = "has_new_materials"
        end
    %>\n    <div class=\"deployed_revisions <%= json_escape((has_new_materials_class)) -%>\">\n        <a class='materials_count hidereveal_expander' id=\"<%= json_escape((scope[:show_hide_link] = scope[:pipeline_name] + '_show_hide_revisions')) -%>\"><%= json_escape((scope[:material_count])) -%> Material(s):</a>\n        <table style='width: 100%' class=\"materials hidereveal_content list_table\">\n            <tr>\n                <th style='width: 10%' class=\"noshow\"></th>\n                <th style='width: 30%' class=\"material_name\">Material</th>\n                <th style='width: 30%' class=\"revision_number\">Revision</th>\n                <th style='width: 30%' class=\"date\">Check-in/trigger</th>\n            </tr>\n            <% scope[:pipeline].getMaterials().each do |material_in_env_pipeline|
                scope[:revision] = scope[:pipeline].findCurrentMaterialRevisionForUI(material_in_env_pipeline) -%>\n                <tr <% if scope[:pipeline].hasNewRevisions(material_in_env_pipeline) -%>class=\"revision-row\"<% end -%> >\n                    <td class=\"noshow\">\n                    <% if scope[:pipeline].hasNewRevisions(material_in_env_pipeline) -%>                            \n                        <img class=\"has_new_material_revisions\" src=\"<%= json_escape((image_path('/images/icon-12-alert.png'))) -%>\">\n                    <% end -%>\n                    </td>\n                    <td class=\"material_name\" title=\"<%= json_escape((material_in_env_pipeline.getDisplayName())) -%>\">\n                        <%= json_escape((smart_word_breaker(material_in_env_pipeline.getTruncatedDisplayName()))) -%>\n                    </td>\n                    <td class=\"revision_number\" title=\"<%= json_escape((scope[:revision] ? scope[:revision].getLatestRevisionString() : "N/A")) -%>\">\n                        <%= json_escape((scope[:revision] ? smart_word_breaker(scope[:revision].getLatestShortRevision()) : "N/A")) -%>\n                    </td>\n                    <td class=\"date\" title=\"<%= json_escape((scope[:revision] ? scope[:revision].getDateOfLatestModification().iso8601 : "N/A")) -%>\">\n                        <%= json_escape((scope[:revision] ? scope[:revision].getDateOfLatestModification().display_time : "N/A")) -%>\n                    </td>\n                </tr>\n            <% end %>\n        </table>\n    </div>\n    <%- scope[:pipeline_model_id] = env_pipeline_dom_id(scope[:pipeline_model]) -%>\n    <script type='text/javascript'>Util.on_load(function() { AjaxRefreshers.main().afterRefreshOf('<%= json_escape((scope[:pipeline_model_id])) -%>', function() { make_collapsable('<%= json_escape((scope[:pipeline_model_id])) -%>'); });});</script>\n<% end %>\n<div class='deploy'>\n    <% if scope[:pipeline_model].hasNewRevisions() || scope[:pipeline_model].hasNeverCheckedForRevisions() -%>\n        <% _scope = {:pipeline_model=>scope[:pipeline_model], :label=>"Deploy Latest"}; -%><% _scope[:pipeline] = _scope[:pipeline_model].getLatestPipelineInstance() -%>\n<%= json_escape((pipeline_operations_blocking_form_remote_tag(:url => api_pipeline_action_path(:pipeline_name => _scope[:pipeline].getName(), :action => "schedule"),
                    :html => {
                        :onsubmit => "PipelineOperations.onTrigger(this, '#{_scope[:pipeline].getName()}', '#{api_pipeline_action_path(:pipeline_name => _scope[:pipeline].getName(), :action => "schedule")}'); return false;"
                    }))) -%>\n    <div class='operate trigger_wrapper'>\n        <%= json_escape((submit_button(_scope[:label], {:type=> 'image', :disabled => !_scope[:pipeline_model].canForce(), :id => "deploy-#{_scope[:pipeline].getName()}"}))) -%>\n    </div>\n<%= json_escape((end_form_tag)) -%>\n    <% end -%>\n    <%= json_escape((blocking_form_remote_tag :url => { :controller => 'pipelines', :action => 'show' },
                       :success => "Modalbox.show(request.responseText, { title: '#{scope[:pipeline_name]} - Deploy', overlayClose: false, width: 850, height: 525, slideDownDuration: 0, overlayDuration: 0});")) -%>\n        <div class='operate trigger_with_options_wrapper'>\n            <input type=\"hidden\" name=\"pipeline_name\" value=\"<%= json_escape((scope[:pipeline_name])) -%>\"/>\n            <%= json_escape((submit_button(l.string("DEPLOY_SPECIFIC_REVISION"), :type => 'image', :class=> "change_revision"))) -%>\n        </div>\n    <%= json_escape((end_form_tag)) -%>\n</div>", "parent_id" : <%="#{environment_id}".to_json%>, "index" : <%= j -%>, "type" : "pipeline" }
            <% end %> <%="," unless is_last%>
        <% end %>
    <% end %>
}
