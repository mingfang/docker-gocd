<!DOCTYPE HTML>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>
    <%= @view_title %> - Go
</title>
<%= yield :before_stylesheets %>
<% css_dir = File.join(File.dirname(__FILE__), "../../../../../stylesheets/") %>

<%= stylesheet_link_tag "structure/reset.css" %>

<!-- LEGACY Structure css, TODO: migrate these to structure/application.css and patterns -->
<%= stylesheet_link_tag "main", "layout", "structure", "ie_hacks" %>

<!-- END - LEGACY Structure css, TODO: migrate these to structure/application.css and patterns -->

<!-- Structure css -->

<%= stylesheet_link_tag "structure/application.css" %>
<% if use_compressed_js? %>
    <%= stylesheet_link_tag "plugins/plugins.css" %>
<% else %>
    <!-- Plugins css -->
    <%= stylesheet_link_tag "plugins/treeview.css",
                            "plugins/jquery.autocomplete.css"
    %>
<% end %>

<% if use_compressed_js? %>
    <%= stylesheet_link_tag "patterns/patterns.css" %>
<% else %>
    <!-- Patterns css -->
    <% styles =           [ "patterns/action_icons.css",
                            "patterns/buttons.css",
                            "patterns/dropdowns.css",
                            "patterns/forms.css",
                            "patterns/messages.css",
                            "patterns/modalbox.css",
                            "patterns/status_visualizations.css",
                            "patterns/tables.css",
                            "patterns/tabs.css",
                            "patterns/titles.css",
                            "patterns/tooltips.css",
                            "patterns/wizard_steps.css"]

        File.open(File.join(css_dir, 'patterns/all.css'), 'w') do |all_css|
            styles.each do |style|
              all_css.puts(File.read(File.join(css_dir, style)))
            end
        end
    %>
    <%= stylesheet_link_tag "patterns/all.css" %>
<% end %>


<!-- LEGACY Module pieces css, TODO: migrate these to patterns/plugins/views-->
<%= stylesheet_link_tag "module.css"%>
<!-- END - LEGACY Module pieces css, TODO: migrate these to patterns/plugins/views-->


<!-- Views css -->
<% if use_compressed_js? %>
    <%= stylesheet_link_tag "views/views.css" %>
<% else %>
    <% styles =           [ "views/admin_jobs.css",
                            "views/admin_materials.css",
                            "views/admin_materials_dependency.css",
                            "views/admin_materials_git.css",
                            "views/admin_materials_hg.css",
                            "views/admin_materials_p4.css",
                            "views/admin_materials_shared.css",
                            "views/admin_materials_svn.css",
                            "views/admin_pipeline_groups.css",
                            "views/admin_pipelines_snippet.css",
                            "views/admin_pipelines.css",
                            "views/admin_pipelines_materials.css",
                            "views/admin_shared.css",
                            "views/admin_stages.css",
                            "views/admin_tasks.css",
                            "views/admin_tasks_ant.css",
                            "views/admin_tasks_exec.css",
                            "views/admin_tasks_fetch.css",
                            "views/admin_tasks_nant.css",
                            "views/admin_tasks_rake.css",
                            "views/admin_tasks_shared.css",
                            "views/admin_templates.css",
                            "views/admin_user_roles.css",
                            "views/shared_go_license_about_to_expire.css",
                            "views/agents.css",
                            "views/backup.css",
                            "views/comparison.css",
                            "views/config_server.css",
                            "views/environments.css",
                            "views/failures.css",
                            "views/gadgets_pipeline.css",
                            "views/pipelines.css",
                            "views/server.css",
                            "views/shared.css",
                            "views/stages.css",
                            "views/users.css"]

        File.open(File.join(css_dir, 'views/all.css'), 'w') do |all_css|
            styles.each do |style|
              all_css.puts(File.read(File.join(css_dir, style)))
            end
        end
    %>
    <%= stylesheet_link_tag "views/all.css" %>
<% end %>


<!-- less-to-css -->
<% if use_compressed_js? %>
    <%= stylesheet_link_tag "css_sass/css_sass.css" %>
<% else %>
    <% styles = [
            "css_sass/base/mixins.css",
            "css_sass/base/reset-g9.css",
            "css_sass/base/sprites.css",
            "css_sass/base/variables.css",
            "css_sass/components/alerts.css",
            "css_sass/components/labels-badges.css",
            "css_sass/components/messages.css",
            "css_sass/components/navbar.css",
            "css_sass/components/pagination.css",
            "css_sass/components/treenav.css",
            "css_sass/components/wizard.css",
            "css_sass/gadgets/breadcrumb.css",
            "css_sass/gadgets/button-groups.css",
            "css_sass/gadgets/docked-toolbar.css",
            "css_sass/gadgets/dropdowns.css",
            "css_sass/gadgets/forms.css",
            "css_sass/gadgets/layouts.css",
            "css_sass/gadgets/modals.css",
            "css_sass/gadgets/popovers.css",
            "css_sass/gadgets/progress-bars.css",
            "css_sass/gadgets/scaffolding.css",
            "css_sass/gadgets/tabs.css",
            "css_sass/gadgets/tooltip.css",
            "css_sass/global/layout.css",
            "css_sass/global/reset.css",
            "css_sass/global/responsive.css",
            "css_sass/global/typography.css",
            "css_sass/go-pages/agent.css",
            "css_sass/go-pages/admin.css",
            "css_sass/go-pages/admin/templates.css",
            "css_sass/go-pages/vsm.css",
            "css_sass/go-pages/history-panel.css",
            "css_sass/go-pages/pipeline.css"
        ]

        File.open(File.join(css_dir, 'css_sass/css_sass.css'), 'w') do |all_css|
            styles.each do |style|
                all_css.puts(File.read(File.join(css_dir, style)))
            end
        end
    %>
<%= stylesheet_link_tag "css_sass/css_sass.css" %>
<% end %>

<!-- START: prototype hooks for css injection -->
<% if params[:controller] == "prototype" %>
    <%= stylesheet_link_tag "prototype_#{params[:action]}" %>
<% end %>
<% if params[:css_file] %>
    <%= stylesheet_link_tag "#{params[:css_file]}" %>
<% end %>

<!-- END: prototype hooks for css injection -->

<% if use_compressed_js? %>
    <%= javascript_include_tag '/go/compressed/all.js' %>
    <![if !IE]>
    <%= javascript_include_tag '/go/compressed/d3.js' %>
    <![endif]>
    <!--[if gt IE 8]><!-->
    <%= javascript_include_tag '/go/compressed/d3.js' %>
    <!--<![endif]-->
<% else %>
        <%= javascript_include_tag "es5-shim.js", "d3.js", "jquery.js", "jquery.tipTip", "jquery.treeview","jquery.timeago", "jquery.autocomplete", "jquery.validate", "jquery.url", "jquery_no_conflict", "prototype", "effects", "util", "accordion", "cookie_utils", "application", "agent_filter", "modalbox",
                                   "edit_popup_handler", "tristate_checkbox", "ajax_refresher", "ajax_refreshers", "agents_ajax_refresher", "default_text", "agent_util", "env_edit_form",
                                   "field_state_replicator", "css_toggling", "micro_content_popup" , "ajax_popup_handler", "autocomplete", "controls", "stage_detail_ajax_refresher", 'form_fields_table',
                                   "pipeline_visualization", "helpers","pipeline_material_revision", "dashboard_ajax_refresher.js", "tabs.js", "dirty_tracker","pipeline_selector", "element_aligner",
                                   "environment_variables_form_field_validator", "server_configuration", "ajax_microcontent_popup_util", "environment_variables", "env_edit_form", "ui.core",
                                   "ui.dialog", "jquery.dirtyform", "compare_pipelines", "task_editor", "stage_history", "group_permissions", "simple-pipeline", "highcharts", "tabs_wizard", "check_connection",
                                   "jquery-ui-1.7.3.custom.min.js", "command_snippet_lookup", "enhanced_modalbox", "vsm", "vsm_renderer", "package_material_definition", "bootstrap.min.js", "package_repository_configuration","package_material_check_connection", "custom_tree_view", "view_template",
                                   "choose_existing_package_definition_state", "add_new_package_definition_state","fetch_pipelines_using_given_package", "user_options_on_header",
                                   "package_material_definition_for_new_pipeline_wizard", "choose_existing_package_definition_state_for_new_pipeline_wizard", "add_new_package_definition_state_for_new_pipeline_wizard",
                                   "jquery.highlight", "jquery.listsearch", "jquery.wizard", "jquery.go-tabs",
                                   "angular.1.0.8.min.js", "angular-resource.1.0.8.min.js","jquery.ba-throttle-debounce.min.js", "pipeline_search"

        %>

<% end %>

<%= yield :after_javascript %>
<link rel="shortcut icon" href="<%=image_path('cruise.ico')%>"/>
    <link rel="alternate" type="application/atom+xml" title="<%= @pipeline.getName() %> stages - Atom" href="<%=api_pipeline_stage_feed_path(:name => @pipeline.getName())-%>" />
</head>
<body id="<%= page_name %>" class="<%= page_name %>">
<div id="body_bg"><div id="body_bg_highlight"><div id="body_wrapper">
    <div id="header">
        <% scope = {:admin_tab_url => '/tab/admin'}; -%><div class="header clear_float">
  <a href="<%= url_for_path('pipelines') %>" id="application_logo">&nbsp;</a>
  <% _scope = {:admin_tab_url => scope[:admin_tab_url]}; -%><div class="application_nav">
  <%= hidden_field_tag("server_time", Time.now.to_i, :id => "server_timestamp") -%>
    <% if @user.anonymous? %>
        <ul class="user">
            <li class="help">
                <%= link_to(l.string("HELP_SMALL"), url_for_path('help/index.html'), :target => "_blank") %>
            </li>
        </ul>
    <% else %>
        <ul class="user">
            <li class="current_user icon">
                <a href="#" class="current_user_name dropdown-arrow-icon"><%= @user.display_name %></a>
                <ul class='enhanced_dropdown hidden'>
                    <li>
                        <%= link_to l.string('PREFERENCES_LOWER'), url_for_path('/tab/mycruise/user') %>
                    </li>
                    <li class="logout">
                        <%= link_to l.string('Sign out'), url_for_path('auth/logout'), :id => "nav-logout", :class => "sign_out" %>
                    </li>
                </ul>
            </li>
            <li class="help">
                <%= link_to(l.string("HELP_SMALL"), url_for_path('help/index.html'), :target => "_blank") %>
            </li>
        </ul>
    <% end %>

  <% unless @no_tabs %>
    <ul class="tabs">
        <%= tab_with_display_name('recent-activity', l.string('PIPELINES'), :url => '/pipelines') %>
        <%= tab_with_display_name("environments", l.string('ENVIRONMENTS_CAPS')) %>
        <%= tab_with_display_name('agents', l.string("AGENTS")) %>
        <li id="cruise-header-tab-admin" class="<%="current" if @current_tab_name == "admin"%>">
            <%
               admin_header_link_label = l.string("ADMIN")
            %>
            <% unless can_view_admin_page? -%>
                <span><%= admin_header_link_label -%></span>
            <% else -%>
                <%= link_to admin_header_link_label, '#', 'data-toggle' => 'dropdown', 'class' => 'dropdown-arrow-icon' -%>
                <ul class="dropdown-menu" role="menu">
                    <%- if is_user_an_admin? -%>
                        <li role="presentation">
    <%= link_to l.string("PIPELINES_POPUP_TITLE"), pipeline_groups_path -%>
</li>
<li role="presentation">
    <%= link_to l.string("TEMPLATES"), templates_path -%>
</li>
<li role="presentation">
    <%= link_to l.string("PIPELINES_SNIPPET"), config_view_path -%>
</li>
<li role="presentation">
    <%= link_to l.string("SERVER_CONFIGURATION"), edit_server_config_path -%>
</li>
<li role="presentation">
    <%= link_to "User Summary", user_listing_path -%>
</li>
<li role="presentation">
    <%= link_to "OAuth Clients", oauth_clients_path -%>
</li>
<li role="presentation">
    <%= link_to "OAuth Enabled Gadget Providers", gadgets_oauth_clients_path -%>
</li>
<li role="presentation">
    <%= link_to "Backup", backup_server_path -%>
</li>
<li role="presentation">
    <%= link_to l.string("PLUGINS_TAB"), plugins_listing_path -%>
</li>
<li role="presentation">
    <%= link_to l.string("PACKAGE_REPOSITORY_TAB"), package_repositories_new_path -%>
</li>
                    <%- elsif is_user_a_group_admin? -%>
                        <li role="presentation">
    <%= link_to l.string("PIPELINES_POPUP_TITLE"), pipeline_groups_path -%>
</li>
<%- if is_user_a_template_admin? -%>
    <li role="presentation">
    <%= link_to l.string("TEMPLATES"), templates_path -%>
</li>
<%- end -%>
<li role="presentation">
    <%= link_to l.string("PIPELINES_SNIPPET"), pipelines_snippet_path -%>
</li>
<li role="presentation">
    <%= link_to l.string("PLUGINS_TAB"), plugins_listing_path -%>
</li>
<li role="presentation">
    <%= link_to l.string("PACKAGE_REPOSITORY_TAB"), package_repositories_new_path -%>
</li>
                    <%- elsif is_user_a_template_admin? -%>
                        <li role="presentation">
    <%= link_to l.string("TEMPLATES"), templates_path -%>
</li>
                    <%- end -%>
                </ul>
            <% end -%>
        </li>
    </ul>
    <div class="error_messaging_counter">
  <div id="cruise_message_counts" class="cruise_messages">
      <% if !@current_server_health_states.isRealSuccess() %>
    <a onclick="Modalbox.show($('cruise_message_body'), {title: 'Error and warning messages', overlayClose:false})">
        <span class="messages">
            <% if @current_server_health_states.warningCount() > 0  && @current_server_health_states.errorCount() > 0 %>
                <span class="error_count"><%= l.errorCount(@current_server_health_states.errorCount()) %></span> &
                <span class="warning_count"><%= l.warningCount(@current_server_health_states.warningCount()) %></span>
            <% else %>
                <% if @current_server_health_states.errorCount() > 0 %>
                    <span class="error_count"><%= l.errorCount(@current_server_health_states.errorCount()) %></span>
                <% end %>
                <% if @current_server_health_states.warningCount() > 0 %>
                    <span class="warning_count"><%= l.warningCount(@current_server_health_states.warningCount()) %></span>
                <% end %>
            <% end %>
        </span>
    </a>
<% end %>
  </div>
  <div id="cruise_message_body" style="display:none;">
      <% if !@current_server_health_states.isRealSuccess() %>
        <% @current_server_health_states.each do |state_in_messages_body| %>
            <% if !state_in_messages_body.isRealSuccess() %>
                <div class="<%=state_in_messages_body.getLogLevel().name().downcase%>">
                    <div class="message"><%=state_in_messages_body.getMessageWithTimestamp()%></div>
                    <div class="description"><%=state_in_messages_body.getDescription()%></div>
                </div>
            <% end %>
        <% end %>
<% end %>
  </div>

  <%- if auto_refresh? -%>
     <script type="text/javascript">
        Util.on_load(function() {new AjaxRefresher('<%= global_message_path() %>', null);});
     </script>
    <%- end -%>
</div>
    <% license_expiry_time = session.delete("LICENSE_EXPIRING_IN")
   if license_expiry_time -%>
    <div class="hidden">
        <div  class="license_about_to_expire content">
            <% if license_expiry_time <= 0 -%>
                <div class="title"><%= l.string("LICENSE_EXPIRED_TITLE") -%></div>
            <% else -%>
                <div class="title"><%= l.string("LICENSE_ABOUT_EXPIRE_TITLE", [license_expiry_time]) -%></div>
            <% end -%>
            <div class="suggestion"><%= l.string("LICENSE_ABOUT_EXPIRE_SUGGESTION") -%></div>
            <button class="primary left submit close_modalbox_control" onclick="Modalbox.hide();"><span><%= l.string("LICENSE_ABOUT_EXPIRE_BUTTON_REMIND_LATER") -%></span></button>
            <div style="display:none">
                <%= form_tag(dismiss_license_expiry_warning_path, :method => 'POST', :onsubmit => "return AjaxForm.jquery_ajax_submit(this, AjaxForm.NonRedirectingPopupHandler);") -%>
                    <%= submit_button(l.string("LICENSE_DO_NOT_SHOW_ME_AGAIN"), :class => 'primary finish') %>
                <%= end_form_tag -%>
            </div>
        </div>
    </div>
    <script>
        Util.on_load(function() {
            Modalbox.show(jQuery('.license_about_to_expire.content')[0], {overlayClose: false, title: '<%= l.string("LICENSE_ABOUT_EXPIRE_POPUP_TITLE") %>'});
        });
    </script>
<% end -%>
  <% end %>
</div>
<div class="back_to_top" title="Scroll to Top">Top</div>
</div>
    </div>
    <%
       show_stage_history_widget = !['pipeline','stats'].include?(params[:action])
    -%>

    <div id='body_content' class="<%= show_stage_history_widget ? "two_col" : "one_col" %>">
        <div class="messaging_wrapper" id="messaging_wrapper">
            <%= flash_message_pane_start("message_pane", false) %>
<% key = @flash_message || params[:fm] || :notice
   if flash = load_flash_message(key) -%>
    <%
       help_link = @flash_help_link.nil? ? "" : " #{@flash_help_link}"
       complete_message = "#{h(flash.to_s)}#{help_link}"
    %>
    <p class="<%= flash.flashClass() -%>"><%= complete_message -%></p>
<% end -%>
<%= flash_message_pane_end %>

        </div>

        <div id="pipeline_header">
            <% scope = {}; -%><% if @lockedPipeline
    scope[:entity_wrapper_class] = "locked"
end %>

<div class="entity_status_wrapper page_header <%= scope[:entity_wrapper_class] %>">
    <% _scope = {:pipeline => @pipeline, :third => {:link => url_for_pipeline_value_stream_map(@pipeline), :text => @pipeline.getLabel()}, :fourth => @stage.getName()}; -%><ul class="entity_title">
    <!--<li><%= link_to "Pipelines", url_for_path('pipelines') %></li>-->
    <li class="name"><%= link_to _scope[:pipeline].getName(), url_for_pipeline(_scope[:pipeline].getName()) %></li>

    <% if _scope[:third][:link] %>
        <li><%= link_to _scope[:third][:text], _scope[:third][:link] %> </li>
     <% else %>
         <li class="last"><h1><%= _scope[:third][:text] %></h1> </li>
    <% end %>

    <% if _scope[:fourth] %>
        <li class="last"><h1><%= _scope[:fourth] %></h1></li>
    <% end %>
</ul>
    <% if @lockedPipeline %>
        <% if @pipeline.hasStage(@lockedPipeline) %>
            <% if @pipeline.canUnlock() %>
                <div class="locked_instance" id='unlock'>
                    <%= blocking_link_to_remote "Click to unlock", :method => :post, :url => api_pipeline_action_path(:pipeline_name => @pipeline.getName(), :action => 'releaseLock'),
                                                :update => {:failure => "message_pane", :success => 'function(){}'}, :before => "spinny('unlock');" %>
                </div>
            <% else %>
                <div class="locked_instance">
                    <span><%= l.string('LOCKED') -%></span>
                </div>
            <% end %>
        <% else %>
            <div class="locked_instance">
                (<%= link_to(l.string("LOCKED_BY_LABEL", [@lockedPipeline.getPipelineLabel()]), stage_detail_pipeline_tab_for_identifier(@lockedPipeline)) %>)
            </div>
        <% end %>
    <% elsif @pipeline.isLockable() %>
        <div class="locked_instance">
            <span><%= l.string('UNLOCKED') -%></span>
        </div>
    <% end %>
    <a href="<%=api_pipeline_stage_feed_path(:name => @pipeline.getName())-%>"><div class="feed">&nbsp;</div></a>
</div>
        </div>

        <%= content_wrapper_tag %>
            <div id="pipeline_status_bar" class="pipeline_flow">
                <% scope = {:pipeline => @pipeline, :current_config_version => @current_config_version, :stage_config_version => @stage.getStage().getConfigVersion()}; -%><% unless scope[:pipeline].nil?
   scope[:update_opts] = {:failure => "message_pane", :success => 'function(){}'}
%>
    <%- if is_config_used_to_run_this_stage_out_of_sync_with_current?(scope[:current_config_version], scope[:stage_config_version]) -%>
        <div class='config_changed_info notification'>
            <p class='information'><%= l.string("CONFIGURATION_HAS_SINCE_CHANGED_NOTIFICATION") %></p>
        </div>
    <%- end -%>
    <div class="pipeline">
        <div class="stages">
            <%
               scope[:after_selected] = false
               scope[:pipeline].getStageHistory().each_with_index do |stage_in_status_bar, idx_in_status_bar|
                   scope[:selected] = params[:stage_name]==(scope[:stage_name]=stage_in_status_bar.getName())
                   scope[:stage_class] = "stage"
                   scope[:show_stage_actions_id] = id_for(stage_in_status_bar, "show_stage_actions")
                   if scope[:selected]
                       scope[:stage_class] += " selected"
                       scope[:after_selected] = true
                   elsif scope[:after_selected]
                       scope[:after_selected] = false
                       scope[:stage_class] += " after_selected"
                   end
            %>
                <div style='width: <%= stage_width_percent(scope[:pipeline].numberOfStages(), scope[:selected], 98) %>' class="<%= scope[:stage_class] %>">
                    <div class="wrapper">
                        <% _scope = {:idx_in_status_bar => idx_in_status_bar, :stage_in_status_bar => stage_in_status_bar, :stage_name => scope[:stage_name], :stage_details_action => scope[:stage_details_action]}; -%><%- _scope[:stage_details_action] ||= params[:action] -%>
<div id="stage_bar_<%= _scope[:idx_in_status_bar] %>" class="row1">
    <% if placeholder_stage?(_scope[:stage_in_status_bar]) %>
        <span class="stage_name"><%= _scope[:stage_name] -%></span>
    <% else %>
        <%= link_to _scope[:stage_in_status_bar].getName(), stage_bar_url(_scope[:stage_in_status_bar], _scope[:stage_details_action]), :class=> "stage_name" %>
    <% end %>

    <% if _scope[:stage_in_status_bar].hasOperatePermission() %>
        <%

           if _scope[:stage_in_status_bar].isRunning()
               _scope[:label] = "cancel"
           elsif _scope[:stage_in_status_bar].canRun()
               _scope[:label] = run_stage_label(_scope[:stage_in_status_bar])
           end

           _scope[:operate_class] = "action_#{_scope[:label]}"
        %>
        <div id="operate_<%= _scope[:stage_name] %>" class="operate secondary <%= _scope[:operate_class] %>">
            <%
               _scope[:id] = "stage_bar_#{_scope[:label]}_#{_scope[:stage_name]}"
               _scope[:html_opts] = {:class => "stage_action", :id => _scope[:id]}
               _scope[:before_opts] = "spinny('operate_#{_scope[:stage_name]}')"
               if _scope[:stage_in_status_bar].canRun() && _scope[:stage_in_status_bar].isScheduled() %>
                <%= blocking_link_to_remote " ", :method => :post, :url => run_stage_path(:stage_name => _scope[:stage_name]), :html => _scope[:html_opts], :update => _scope[:update_opts], :before => _scope[:before_opts] %>
            <% end %>
            <% if _scope[:stage_in_status_bar].isRunning() %>
                <%= blocking_link_to_remote " ",  :method => :post, :url => cancel_stage_path(:id => _scope[:stage_in_status_bar].getId()), :html => _scope[:html_opts], :update => _scope[:update_opts], :before => _scope[:before_opts] %>
            <% end %>
        </div>
    <% end %>
</div>
<% _scope[:stage_bar_html_options] = stage_bar_options(_scope[:stage_in_status_bar]) %>
<div class="stage_bar_wrapper">
    <% if placeholder_stage?(_scope[:stage_in_status_bar]) %>
        <div <%= _scope[:stage_bar_html_options] -%>><%= check_for_cancelled_contents(_scope[:stage_in_status_bar].getState()) %></div>
    <% else %>
        <a href="<%= stage_bar_url(_scope[:stage_in_status_bar], _scope[:stage_details_action]) -%>" <%= _scope[:stage_bar_html_options] -%>>
            <%= check_for_cancelled_contents(_scope[:stage_in_status_bar].getState()) %>
        </a>
    <% end %>
</div>
<% if _scope[:idx_in_status_bar] > 0 %>
    <div class="trigger_gate">
        <% __scope = {:stage_in_status_bar => _scope[:stage_in_status_bar]}; -%><%
title = if com.thoughtworks.cruise.util.CruiseConstants::DEFAULT_APPROVED_BY == __scope[:stage_in_status_bar].getApprovedBy()
    "Automatically approved"
elsif __scope[:stage_in_status_bar].getApprovedBy().blank?
    "Awaiting approval"
else
    "Approved by #{__scope[:stage_in_status_bar].getApprovedBy()}"
end

clazz = __scope[:stage_in_status_bar].isAutoApproved() ?
        "auto" :
        "manual"

stage_name = __scope[:stage_in_status_bar].getName()
trigger_id = "stage_bar_trigger_" + stage_name
__scope[:html_opts] = {:class => clazz, :title=> title, :id => trigger_id }
   
if __scope[:stage_in_status_bar].canRun() && !__scope[:stage_in_status_bar].isScheduled() %>
    <%= blocking_link_to_remote " ", :method => :post, :url => run_stage_path(:stage_name => stage_name), :html => __scope[:html_opts], :update => __scope[:update_opts], :before => __scope[:before_opts] %>
<% else %>
    <span class="<%= clazz %>" title="<%= title %>" id="<%= trigger_id %>"> </span>
<% end %>


    </div>
<% end %>

                    </div>
                </div>
            <% end %>
        </div>
    </div>
<% end %>

            </div>
            <div class="page_title_bar">
                <%
                page_status_bar_class = 'state_'
                if !@stage.nil? && !@stage.getState().nil?
                    page_status_bar_class += @stage.getState().to_s
                end
                %>
                <div id="page_status_bar" class="page_status_bar <%=page_status_bar_class%>">
                    <% if @show_stage_status_bar %>
                        <div class="run_results section">
    <div class="run">
        <span class="label"><%= l.string("Run:") %></span>
        <span id="current_stage_run">
            <% _scope = {}; -%><% _scope[:stage_x_of_y]= l.X_of_Y(@stage.getStageCounter(), @stage.getTotalRuns()) %>
<% if @stage.getTotalRuns() > 1 %>
    <a href="#" id="show_other_stage_runs"><%= _scope[:stage_x_of_y] %></a>
<% else %>
    <span><%= _scope[:stage_x_of_y] %></span>
<% end %>

        </span>

        <div class="hidden enhanced_dropdown" id="other_stage_runs">
            <% _scope = {}; -%><% if @stage.getTotalRuns() > 1 %>
    <ul class="micro_content_root other_runs">
        <% (1..@stage.getTotalRuns()).each do |n_in_other_stage_runs| %>
            <% next if @stage.getStageCounter() == n_in_other_stage_runs.to_s %>
            <li>
                <a href="<%= stage_detail_tab_path(:stage_counter => n_in_other_stage_runs, :action => params[:action]) %>">
                    <span style="float:left; margin-right: 10px;"><%= l.string("Run:") + " " + l.X_of_Y(n_in_other_stage_runs, @stage.getTotalRuns()) %></span>
                    <% __scope = {:state=>@stage.getStateForRun(n_in_other_stage_runs)}; -%><div class="color_code <%= __scope[:state] %>"><%= check_for_cancelled_contents(__scope[:state]) %></div>
<span class="message" style="float:right; padding: 0;"><%= l.string(__scope[:state]) %></span>

                </a>
            </li>
        <% end %>
    </ul>
<% end %>

        </div>
    </div>

    <div class="result" id="stage_result">
        <% _scope = {:state => @stage.getState()}; -%><div class="color_code <%= _scope[:state] %>"><%= check_for_cancelled_contents(_scope[:state]) %></div>
<span class="message" style="float:right; padding: 0;"><%= l.string(_scope[:state]) %></span>

    </div>
</div>

<div class="run_details section" id="stage_run_details">
    <% _scope = {}; -%><% __scope = {:stage => @stage}; -%><div class="schedule_info">
    <%= trigger_message_with_formatted_date_time(__scope[:stage].getCreatedTime(), __scope[:stage].getApprovedBy()) -%>
</div>


<div class="duration">
    <span class="label"><%= l.string("Duration:") %></span>
    <span class="time"><%= @stage.getDuration() %></span>
</div>

<span class="compare_pipeline">
        <% _scope[:identifier] = @stage.getIdentifier()
           _scope[:counter] = _scope[:identifier].getPipelineCounter() %>
        <%= link_to("#{l.string("COMPARE")}",
                    compare_pipelines_path(:pipeline_name => _scope[:identifier].getPipelineName(), :from_counter => _scope[:counter] - 1, :to_counter => _scope[:counter]),
                    :title => l.string("TOOLTIP_COMPARE_WITH_PREVIOUS"))
        %>    
</span>

</div>

<script type="text/javascript">
    var other_stages_popup_shower = null;
    function wire_up_stage_runs_popup() {
        other_stages_popup_shower.cleanup_buttons();
        $('show_other_stage_runs') && other_stages_popup_shower.bindShowButton($('show_other_stage_runs'));
    }
    
    Util.on_load(function() {
        var other_stages_popup = new MicroContentPopup($('other_stage_runs'), new MicroContentPopup.NoOpHandler());
        other_stages_popup_shower = new MicroContentPopup.ClickShower(other_stages_popup);
        wire_up_stage_runs_popup();
    });
</script>

                    <% end %>
                </div>
            </div>
            <div class="page_nav">
            </div>
            <div class="rail">
                <% if show_stage_history_widget %>
                    <div id="stage_history" class="stage_history overview_widget">
                        <% scope = {:stage_history_page => @stage_history_page, :tab => params[:action], :current_stage_pipeline => @pipeline, :current_config_version => @current_config_version}; -%><div class="stage_history">
    <h3><%= l.string("STAGE_HISTORY") %></h3>
    <%
       current_config_version = scope[:current_config_version]
       stage_history_page = scope[:stage_history_page]
       immediate_chronologically_forward_stage_history_entry = stage_history_page.getImmediateChronologicallyForwardStageHistoryEntry()
       bottom_of_last_page_config_version = immediate_chronologically_forward_stage_history_entry.nil? ? nil : immediate_chronologically_forward_stage_history_entry.getConfigVersion()
    -%>
    <% stage_history_page.getStages().each_with_index do |stage_in_stage_history, index_in_stage_history| %>
        <% if current_config_version != stage_in_stage_history.getConfigVersion() &&  (bottom_of_last_page_config_version.nil? || bottom_of_last_page_config_version != stage_in_stage_history.getConfigVersion()) %>
            <% later_config_version = current_config_version -%>
            <% current_config_version = stage_in_stage_history.getConfigVersion() -%>
            <div class="config_change <%= "counter_#{stage_in_stage_history.getIdentifier().getPipelineCounter()}_#{stage_in_stage_history.getIdentifier().getStageCounter()}"-%>">
               <% if is_user_an_admin? && current_config_version != nil %>
                    <% span_text = link_to("Config Changed", "#", :onclick => "Modalbox.show('#{config_change_path(:later_md5 => later_config_version, :earlier_md5 => current_config_version)}', {overlayClose: false, title: 'Config Changes'})") %>
                <% else %>
                    <% span_text = "Config Changed" %>
                <% end %>

                <span><%= span_text -%></span>
            </div>
        <% end %>
        <div class="stage">
            <a class="<%= is_current_stage?(stage_id_in_stage_history = stage_in_stage_history.getIdentifier()) ? "selected alert" : "" %>" href="<%= tab_aware_path_for_stage stage_id_in_stage_history, scope[:tab] %>">
                <div class="label_counter_wrapper">
                    <div class="color_code_stage <%= stage_in_stage_history.getState() -%> <%= stage_in_stage_history.hasRerunJobs() ? "has_rerun_jobs" : "has_no_rerun_jobs" -%>">
                        <%= check_for_cancelled_contents(stage_in_stage_history.getState()) %>
                    </div>
                    <%- if stage_in_stage_history.hasRerunJobs() -%>
                        <img class="has_rerun_jobs_icon" src="<%=image_path('/images/g9/icons/icon_rerun_flag.png')%>">
                     <%- end -%>
                    <span class="pipeline_label"><%= smart_word_breaker(stage_in_stage_history.getIdentifier().getPipelineLabel()) %></span>
                    <% if stage_in_stage_history.getIdentifier().getStageCounter().to_i > 1 %>
                        <span class="stage_counter secondary"><%= l.string("STAGE_RUN_NUMBER", [stage_in_stage_history.getIdentifier().getStageCounter()]) %></span>
                    <% end %>
                </div>
            </a>
            <span class="compare_pipeline hidden">
                <a href="<%= compare_pipelines_path(:pipeline_name => stage_in_stage_history.getIdentifier().getPipelineName(), :to_counter => stage_in_stage_history.getIdentifier().getPipelineCounter(), :from_counter => scope[:current_stage_pipeline].getCounter()) %>">&nbsp;</a>
            </span>
        </div>
    <% end %>
    <% _scope = {:page_handler => :stage_history_pagination_handler, :pagination => scope[:stage_history_page].getPagination(), :handler_args => [scope[:tab]]}; -%><%- _scope[:handler_args] = Array(_scope[:handler_args]) -%>
<% if _scope[:pagination].getTotalPages() > 0 %>
    <div class="pagination">
        <div class="wrapper">
            <% _scope[:pagination].getPages().each do |page| %>
                <% if page.isDots() %>
                    <span>...</span>
                <% else %>
                    <% if page.isCurrent() %>
                        <span class="current_page"><%= page.getLabel() %></span>
                    <% else %>
                        <%= send(_scope[:page_handler], page, *_scope[:handler_args]) -%>
                    <% end %>
                <% end %>
            <% end %>
        </div>
    </div>
<% end %>
</div>
<script type="text/javascript">
    Util.on_load(function() {
        compare_link_handlers();
    });
</script>
                    </div>
                    <input type="hidden" id="stage-history-page" value="<%=@stage_history_page.currentPage()%>"/>
                <% end %>
            </div>

            <div class="content">
                <%= yield %>
            </div>
        <%= end_content_wrapper %>
    </div>


    <div id='footer'>
        <ul class="copyright" onclick="dashboard_periodical_executer.stop();">
    <li>Copyright &copy; 2013 <a href="http://www.thoughtworks.com/products" target='blank'>ThoughtWorks, Inc.</a></li>
    <li class="last"><%=l.string("GO_VERSION")-%>: <%=version%></li>
</ul>
<ul class="links">
    <li><%=link_to("(cc) " +  l.string("CCTRAY_FEED"), url_for_path('cctray.xml'))%></li>
    <li><%=link_to(l.string("SERVER_DETAILS"), url_for_path('about'))%></li>
    <li><a target="_blank" href="http://support.thoughtworks.com/categories/20002778-go-community-support"><%=l.string("COMMUNITY")%></a></li>
    <li><a target="_blank" href="http://www.thoughtworks.com/products/support"><%=l.string("SUPPORT")%></a></li>
    <li class="last"><%=link_to(l.string("HELP_SMALL"), url_for_path('help/index.html'), :target => "_blank")%></li>
</ul>

    </div>
</div></div></div>
</body>
</html>

