{
    <% @pipeline_groups.each_with_index do |pipeline_group, i| -%>
        <%= pipelines_dom_id(pipeline_group.getName()).to_json%> : {"html" : "<% scope = {:pipeline_group => pipeline_group, :omit_pipeline => true}; -%><% scope[:omit_pipeline] ||= false %>\n<div class=\"pipeline_bundle pipeline_group\">\n    <div class=\"pipelines\">\n        <%= json_escape((content_wrapper_tag)) -%>\n            <h2 class=\"entity_title\"><%= json_escape((scope[:pipeline_group].getName())) -%></h2>\n            <% scope[:pipeline_models] = scope[:pipeline_group].getPipelineModels()
               scope[:pipeline_models].each_with_index do |pipeline_model_in_pipeline_group, idx_in_pipeline_group| -%>\n\n            <% unless scope[:omit_pipeline] %>\n                <div id=\"<%= json_escape((pipelines_pipeline_dom_id(pipeline_model_in_pipeline_group))) -%>\" class=\"pipeline\">\n                    <% cache(view_cache_key.forPipelineModelBox(pipeline_model_in_pipeline_group), :subkey => "pipeline_html") do %>\n                        <% _scope = {:pipeline_model => pipeline_model_in_pipeline_group, :should_display_previously_blurb => true, :show_controls => true, :show_changes => true, :show_compare => true}; -%><% _scope[:show_controls] ||= false
   _scope[:should_display_previously_blurb] ||= false
   _scope[:show_changes] ||= false
   _scope[:pipeline_name] = _scope[:pipeline_model].getName() -%>\n<div class=\"pipeline_header\">\n    <%
        h3_class = ""
        if _scope[:pipeline_model].hasNewRevisions() && !_scope[:show_changes]
            h3_class = " has_new_materials"
        end
    %>\n    <div class=\"pipeline_actions\">\n        <% __scope = {:pipeline_model => _scope[:pipeline_model]}; -%><% __scope[:latestPIM] = __scope[:pipeline_model].getLatestPipelineInstance() -%>\n<% if __scope[:latestPIM].isCurrentlyLocked() %>\n    <% if __scope[:latestPIM].canUnlock() -%>\n        <span class=\"locked_instance click_to_unlock\" id='unlock' title=\"Click to unlock this pipeline\">\n            <%= json_escape((blocking_link_to_remote "&nbsp;", :method => :post, :url => api_pipeline_action_path(:pipeline_name =>  __scope[:pipeline_model].getName(), :action => 'releaseLock'),
                                        :update => {:failure => "message_pane", :success => 'function(){}'}, :before => "spinny('unlock');")) -%>\n        </span>\n    <% else -%>\n        <span class=\"locked_instance locked\" title=\"This pipeline is locked\">\n          &nbsp;\n        </span>\n    <% end -%>\n<% end -%>\n        <%- if _scope[:pipeline_model].canAdminister() -%>\n            <%= json_escape((link_to "", pipeline_edit_path(:pipeline_name => _scope[:pipeline_name], :current_tab => "general"), :class => 'icon16 setting')) -%>\n        <%- end -%>\n    </div>\n    <div class=\"pipeline_name_link\">\n        <h3 class=\"title entity_title<%= json_escape((h3_class)) -%> \">\n            <%= json_escape((link_to(_scope[:pipeline_name], url_for_pipeline(_scope[:pipeline_name])))) -%>\n        </h3>\n    </div>\n</div>\n\n<div class=\"alert\" id=\"trigger-result-<%= json_escape((_scope[:pipeline_name])) -%>\"></div>\n\n<% _scope[:pipeline_model].getActivePipelineInstances().each do |active_pipeline_in_pipeline| -%>\n    <div class=\"pipeline_instance\">\n        <% if !active_pipeline_in_pipeline.hasHistoricalData() %>\n            <div class='status'>\n                <span class='message'>\n                  No historical data\n                </span>\n            </div>\n        <% else %>\n            <div class='status details'>\n                <% __scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><% __scope[:rendering_gadget] ||= false %>\n\n<div class=\"label\">Label:<%
       #check to see if we are currently waiting on scheduling (aka loading)
       if __scope[:active_pipeline_in_pipeline].getLabel() == 'TBD' -%>\n        <img src=\"images/new/ajax_loader_small.gif\" alt=\"Scheduling...\"/>\n    <% else -%>\n        <a href=\"<%= json_escape((url_for_pipeline_value_stream_map(__scope[:active_pipeline_in_pipeline], :only_path => !__scope[:rendering_gadget]))) -%>\" <%= json_escape((__scope[:rendering_gadget] ? "target='_blank'" : "")) -%> title=\"<%= json_escape((__scope[:active_pipeline_in_pipeline].getLabel())) -%>\"><%= json_escape((truncate(__scope[:active_pipeline_in_pipeline].getLabel(), :length => 40))) -%></a>\n    <% end -%>\n</div>\n\n\n                <% if _scope[:show_compare] %>\n                <span class=\"compare_pipeline dashboard\" >\n                    <%= json_escape((link_to("#{l.string("COMPARE")}",
                                    compare_pipelines_path(:pipeline_name => _scope[:pipeline_name], :from_counter => active_pipeline_in_pipeline.getCounter() - 1, :to_counter => active_pipeline_in_pipeline.getCounter()),
                                    :title => l.string("TOOLTIP_COMPARE_WITH_PREVIOUS")))) -%>\n                </span>\n                <% end %>\n\n                <% if _scope[:show_changes] && !(_scope[:revisions] = active_pipeline_in_pipeline.getCurrentRevisions()).empty?
                    _scope[:instance_identifier] = pipeline_instance_identifier(active_pipeline_in_pipeline)
                    _scope[:changes_id] = pipeline_build_cause_popup_id(active_pipeline_in_pipeline)
                    _scope[:show_changes_id] ="show_changes_#{_scope[:instance_identifier]}"
                -%>\n                    <% if _scope[:show_compare] %>\n                        <span class=\"separator\">&nbsp;</span>\n                    <% end %>\n\n                    <span class=\"changes_button_wrapper\">\n                        <%= json_escape((link_to(l.string("CHANGES"), build_cause_path(:pipeline_name => active_pipeline_in_pipeline.getName(), :pipeline_counter => active_pipeline_in_pipeline.getCounter()), :id => _scope[:show_changes_id], :class => "show_panel submit_small dashboard_build_cause_button"))) -%>\n                    </span>\n\n                    <script type=\"text/javascript\">\n                    </script>\n                <% end -%>\n                <% __scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><div class=\"pipeline_instance_details\">\n    <div class=\"schedule_time\" title=\"<%= json_escape((__scope[:active_pipeline_in_pipeline].getScheduledDate())) -%>\">\n        <%= json_escape((trigger_message(__scope[:active_pipeline_in_pipeline].getScheduledDate().getTime(), __scope[:active_pipeline_in_pipeline]))) -%>\n    </div>\n    <% ___scope = {:pipeline => __scope[:active_pipeline_in_pipeline],
                                                                         :total_width => 20.0,
                                                                         :rendering_gadget => __scope[:rendering_gadget] }; -%><div class=\"stages\">\n    <div class=\"latest_stage\">\n            <%= json_escape((___scope[:pipeline].getPipelineStatusMessage())) -%>\n    </div>\n\n    <% ___scope[:pipeline].getStageHistory().each do |stage_in_stage_bar| %>\n        <% ____scope = {:pipeline => ___scope[:pipeline],
                                           :stage => stage_in_stage_bar,
                                           :total_width => ___scope[:total_width],
                                           :rendering_gadget => ___scope[:rendering_gadget]}; -%><% ____scope[:rendering_gadget] ||= false %>\n<% if placeholder_stage?(____scope[:stage]) -%>\n    <span class='stage'>\n        <% _____scope = {:pipeline => ____scope[:pipeline], :stage => ____scope[:stage], :total_width => ____scope[:total_width]}; -%><%
   _____scope[:state] = _____scope[:stage].getState()
   _____scope[:stage_name] = _____scope[:stage].getName()
   _____scope[:last_run_stage] = _____scope[:pipeline].isLatestStage(_____scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((_____scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((_____scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [_____scope[:stage_name], _____scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(_____scope[:pipeline].getStageHistory().size(), _____scope[:last_run_stage], _____scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(_____scope[:state]))) -%>\n    </div>\n</div>\n    </span>\n<% else -%>\n    <a href='<%= json_escape((stage_detail_path(:pipeline_name => ____scope[:pipeline].getName(),
                                   :pipeline_counter => ____scope[:pipeline].getCounter(),
                                   :stage_name => ____scope[:stage].getName(),
                                   :stage_counter => ____scope[:stage].getCounter(),
                                   :only_path => !____scope[:rendering_gadget]))) -%>' class='stage' <%= json_escape((____scope[:rendering_gadget] ? "target='_blank'" : "")) -%>>\n        <% _____scope = {:pipeline => ____scope[:pipeline], :stage => ____scope[:stage], :total_width => ____scope[:total_width]}; -%><%
   _____scope[:state] = _____scope[:stage].getState()
   _____scope[:stage_name] = _____scope[:stage].getName()
   _____scope[:last_run_stage] = _____scope[:pipeline].isLatestStage(_____scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((_____scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((_____scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [_____scope[:stage_name], _____scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(_____scope[:pipeline].getStageHistory().size(), _____scope[:last_run_stage], _____scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(_____scope[:state]))) -%>\n    </div>\n</div>\n    </a>\n<% end -%>\n    <% end %>\n</div>\n\n</div>\n\n            </div>\n            <% __scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline, :should_display_previously_blurb =>  _scope[:should_display_previously_blurb]}; -%><% __scope[:rendering_gadget] ||= false %>\n<div class=\"previously_wrapper\">\n    <% if __scope[:should_display_previously_blurb] && __scope[:active_pipeline_in_pipeline].isAnyStageActive() -%>\n        <% __scope[:active_stage] = __scope[:active_pipeline_in_pipeline].activeStage() -%>\n        <% if __scope[:active_stage].hasPreviousStage() -%>\n            <div class=\"previously\">\n                <span class=\"label\"><%= json_escape((l.string("Previously Blurb"))) -%></span>\n                <% __scope[:previous_stage] = __scope[:active_stage].getPreviousStage() -%>\n                <% __scope[:previous_stage_identifier] = __scope[:previous_stage].getIdentifier() -%>\n                <% __scope[:stage_result] = __scope[:previous_stage].getResult() -%>\n                <a class=\"result\" href=\"<%= json_escape((stage_detail_path_for_identifier(__scope[:previous_stage_identifier], :only_path => !__scope[:rendering_gadget]))) -%>\" <%= json_escape((__scope[:rendering_gadget] ? "target='_blank'" : "")) -%> \n                   title=\"<%= json_escape((__scope[:previous_stage_identifier].getPipelineLabel())) -%>\">\n                    <span class=\"color_code_small <%= json_escape((__scope[:stage_result])) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(__scope[:stage_result]))) -%>\n                    </span> <%= json_escape((__scope[:stage_result])) -%>\n                </a>\n            </div>\n        <% end -%>\n    <% end -%>\n</div>\n\n        <% end -%>\n    </div>\n<% end -%>\n\n<div class=\"pipeline_operations\">\n    <% if _scope[:show_controls] && _scope[:pipeline_model].canOperate() -%>\n        <% _scope[:trigger_label] = l.string('TRIGGER')
           _scope[:trigger_with_option_label] = l.string('TRIGGER_WITH_OPTIONS')
        -%>\n        <% __scope = {:pipeline_model=> _scope[:pipeline_model], :label=>"#{_scope[:trigger_label]}"}; -%><% __scope[:pipeline] = __scope[:pipeline_model].getLatestPipelineInstance() -%>\n<%= json_escape((pipeline_operations_blocking_form_remote_tag(:url => api_pipeline_action_path(:pipeline_name => __scope[:pipeline].getName(), :action => "schedule"),
                    :html => {
                        :onsubmit => "PipelineOperations.onTrigger(this, '#{__scope[:pipeline].getName()}', '#{api_pipeline_action_path(:pipeline_name => __scope[:pipeline].getName(), :action => "schedule")}'); return false;"
                    }))) -%>\n    <div class='operate trigger_wrapper'>\n        <%= json_escape((submit_button(__scope[:label], {:type=> 'image', :disabled => !__scope[:pipeline_model].canForce(), :id => "deploy-#{__scope[:pipeline].getName()}"}))) -%>\n    </div>\n<%= json_escape((end_form_tag)) -%>\n\n        <% __scope = {:pipeline => _scope[:pipeline_model].getLatestPipelineInstance(),
                                                                                                 :label => "#{_scope[:trigger_with_option_label]}",
                                                                                                 :can_trigger => _scope[:pipeline_model].canForce(),
                                                                                                 :has_upstream_material => false}; -%><%= json_escape((pipeline_operations_blocking_form_remote_tag :url => { :controller => 'pipelines', :action => 'show_for_trigger' },
                             :html => {
                                     :onsubmit => "PipelineOperations.onTriggerWithOptions(this, '#{__scope[:pipeline].getName()}', '#{l.string('TRIGGER')}', '#{pipeline_show_with_option_path}'); return false;"
                             })) -%>\n    <input type=\"hidden\" name=\"pipeline_name\" value=\"<%= json_escape((__scope[:pipeline_name]=__scope[:pipeline].getName())) -%>\"/>\n    <div class='operate trigger_with_options_wrapper'>\n        <%= json_escape((submit_button(__scope[:label], :type => 'image', :disabled => !__scope[:can_trigger], :id => "deploy-with-options-#{__scope[:pipeline].getName()}"))) -%>\n    </div>\n    <% if __scope[:has_upstream_material] %>\n        <input type=\"hidden\" name=\"pegged_revisions[<%= json_escape((__scope[:pegged_pipeline])) -%>]\" value=\"<%= json_escape((__scope[:pegged_revision])) -%>\"/>\n    <% end%>\n<%= json_escape((end_form_tag)) -%>\n        <% __scope = {:pause_info => _scope[:pipeline_model].getPausedInfo(), :pipeline_name => _scope[:pipeline_name]}; -%><% if __scope[:pause_info].isPaused() %>\n    <form action=\"<%= json_escape((unpause_pipeline_path(:pipeline_name => __scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onUnPause(this, '<%= json_escape((__scope[:pipeline_name])) -%>', '<%= json_escape((unpause_pipeline_path(__scope[:pipeline_name]))) -%>'); return false;\">\n        <div class='operate unpause_wrapper'>\n            <%= json_escape((submit_button("Unpause", :type=> "image", :class => 'primary', :id => "unpause-#{__scope[:pipeline_name]}"))) -%>\n        </div>\n    </form>\n<% else
    __scope[:pause_info_id] = "pause-info-#{__scope[:pipeline_name]}"
    __scope[:pause_onclick] = "Modalbox.show($(\"#{__scope[:pause_info_id]}\"),{title: \"Pause pipeline: #{__scope[:pipeline_name]} \",overlayClose:false})"
-%>\n    <div class='operate pause_wrapper'>\n        <%= json_escape((submit_button("Pause", {:type=> "image", :id => "confirm-pause-#{__scope[:pipeline_name]}", :onclick => "#{__scope[:pause_onclick]}"}))) -%>\n    </div>\n    <div id=\"<%= json_escape((__scope[:pause_info_id])) -%>\" style=\"display:none\">\n        <form action=\"<%= json_escape((pause_pipeline_path(:pipeline_name => __scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onPause(this, '<%= json_escape((__scope[:pipeline_name])) -%>', '<%= json_escape((pause_pipeline_path(__scope[:pipeline_name]))) -%>'); return false;\">\n            <div class=\"sub_tab_container\">\n                <div class='pause_reason'>\n                    Specify a reason for pausing schedule on pipeline '<%= json_escape((__scope[:pipeline_name])) -%>': <input type=\"text\" name=\"pauseCause\" maxlength=\"255\"/>\n                </div>\n            </div>\n            <div class=\"actions\">\n                <%= json_escape((submit_button("Ok", :class=> "primary", :id => "pause-#{__scope[:pipeline_name]}"))) -%>\n                <%= json_escape((submit_button("Close", :onclick => "Modalbox.hide()", :type => "button"))) -%>\n            </div>\n        </form>\n    </div>\n<% end -%>\n    <% end -%>\n</div>\n<% __scope = {:pause_info => _scope[:pipeline_model].getPausedInfo()}; -%><% if __scope[:pause_info].isPaused() %>\n    <span class=\"pause_description paused_by\">Paused by <%= json_escape((__scope[:pause_info].getPauseBy())) -%> </span>\n    <span class=\"pause_description pause_message\">(<%= json_escape((h(__scope[:pause_info].getPauseCause()))) -%>)</span>\n<% end %>\n                    <% end %>\n                </div>\n            <% end %>\n\n            <div class=\"divider\"></div>\n        <% end -%>\n        <%= json_escape((end_content_wrapper)) -%>\n    </div>\n</div>\n" , "parent_id" : "pipeline_groups_container", "index" : <%= i -%>, "type" : "group_of_pipelines" },
    <% end %>
    <% @pipeline_groups.each do |pipeline_group| -%>
        <% pipeline_models = pipeline_group.getPipelineModels() -%>
        <% pipeline_models.each_with_index do |pipeline_model, j| -%>
            <%- pipeline_group_id = pipelines_dom_id(pipeline_group.getName()) -%>
            <% cache(view_cache_key.forPipelineModelBox(pipeline_model), :subkey => "pipeline_json_#{pipeline_group_id}") do %>
                <%= pipelines_pipeline_dom_id(pipeline_model).to_json%> : {"html" : "<% scope = { :pipeline_model => pipeline_model, :should_display_previously_blurb => true, :show_controls => true, :show_changes => true, :show_compare => true}; -%><% scope[:show_controls] ||= false
   scope[:should_display_previously_blurb] ||= false
   scope[:show_changes] ||= false
   scope[:pipeline_name] = scope[:pipeline_model].getName() -%>\n<div class=\"pipeline_header\">\n    <%
        h3_class = ""
        if scope[:pipeline_model].hasNewRevisions() && !scope[:show_changes]
            h3_class = " has_new_materials"
        end
    %>\n    <div class=\"pipeline_actions\">\n        <% _scope = {:pipeline_model => scope[:pipeline_model]}; -%><% _scope[:latestPIM] = _scope[:pipeline_model].getLatestPipelineInstance() -%>\n<% if _scope[:latestPIM].isCurrentlyLocked() %>\n    <% if _scope[:latestPIM].canUnlock() -%>\n        <span class=\"locked_instance click_to_unlock\" id='unlock' title=\"Click to unlock this pipeline\">\n            <%= json_escape((blocking_link_to_remote "&nbsp;", :method => :post, :url => api_pipeline_action_path(:pipeline_name =>  _scope[:pipeline_model].getName(), :action => 'releaseLock'),
                                        :update => {:failure => "message_pane", :success => 'function(){}'}, :before => "spinny('unlock');")) -%>\n        </span>\n    <% else -%>\n        <span class=\"locked_instance locked\" title=\"This pipeline is locked\">\n          &nbsp;\n        </span>\n    <% end -%>\n<% end -%>\n        <%- if scope[:pipeline_model].canAdminister() -%>\n            <%= json_escape((link_to "", pipeline_edit_path(:pipeline_name => scope[:pipeline_name], :current_tab => "general"), :class => 'icon16 setting')) -%>\n        <%- end -%>\n    </div>\n    <div class=\"pipeline_name_link\">\n        <h3 class=\"title entity_title<%= json_escape((h3_class)) -%> \">\n            <%= json_escape((link_to(scope[:pipeline_name], url_for_pipeline(scope[:pipeline_name])))) -%>\n        </h3>\n    </div>\n</div>\n\n<div class=\"alert\" id=\"trigger-result-<%= json_escape((scope[:pipeline_name])) -%>\"></div>\n\n<% scope[:pipeline_model].getActivePipelineInstances().each do |active_pipeline_in_pipeline| -%>\n    <div class=\"pipeline_instance\">\n        <% if !active_pipeline_in_pipeline.hasHistoricalData() %>\n            <div class='status'>\n                <span class='message'>\n                  No historical data\n                </span>\n            </div>\n        <% else %>\n            <div class='status details'>\n                <% _scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><% _scope[:rendering_gadget] ||= false %>\n\n<div class=\"label\">Label:<%
       #check to see if we are currently waiting on scheduling (aka loading)
       if _scope[:active_pipeline_in_pipeline].getLabel() == 'TBD' -%>\n        <img src=\"images/new/ajax_loader_small.gif\" alt=\"Scheduling...\"/>\n    <% else -%>\n        <a href=\"<%= json_escape((url_for_pipeline_value_stream_map(_scope[:active_pipeline_in_pipeline], :only_path => !_scope[:rendering_gadget]))) -%>\" <%= json_escape((_scope[:rendering_gadget] ? "target='_blank'" : "")) -%> title=\"<%= json_escape((_scope[:active_pipeline_in_pipeline].getLabel())) -%>\"><%= json_escape((truncate(_scope[:active_pipeline_in_pipeline].getLabel(), :length => 40))) -%></a>\n    <% end -%>\n</div>\n\n\n                <% if scope[:show_compare] %>\n                <span class=\"compare_pipeline dashboard\" >\n                    <%= json_escape((link_to("#{l.string("COMPARE")}",
                                    compare_pipelines_path(:pipeline_name => scope[:pipeline_name], :from_counter => active_pipeline_in_pipeline.getCounter() - 1, :to_counter => active_pipeline_in_pipeline.getCounter()),
                                    :title => l.string("TOOLTIP_COMPARE_WITH_PREVIOUS")))) -%>\n                </span>\n                <% end %>\n\n                <% if scope[:show_changes] && !(scope[:revisions] = active_pipeline_in_pipeline.getCurrentRevisions()).empty?
                    scope[:instance_identifier] = pipeline_instance_identifier(active_pipeline_in_pipeline)
                    scope[:changes_id] = pipeline_build_cause_popup_id(active_pipeline_in_pipeline)
                    scope[:show_changes_id] ="show_changes_#{scope[:instance_identifier]}"
                -%>\n                    <% if scope[:show_compare] %>\n                        <span class=\"separator\">&nbsp;</span>\n                    <% end %>\n\n                    <span class=\"changes_button_wrapper\">\n                        <%= json_escape((link_to(l.string("CHANGES"), build_cause_path(:pipeline_name => active_pipeline_in_pipeline.getName(), :pipeline_counter => active_pipeline_in_pipeline.getCounter()), :id => scope[:show_changes_id], :class => "show_panel submit_small dashboard_build_cause_button"))) -%>\n                    </span>\n\n                    <script type=\"text/javascript\">\n                    </script>\n                <% end -%>\n                <% _scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline}; -%><div class=\"pipeline_instance_details\">\n    <div class=\"schedule_time\" title=\"<%= json_escape((_scope[:active_pipeline_in_pipeline].getScheduledDate())) -%>\">\n        <%= json_escape((trigger_message(_scope[:active_pipeline_in_pipeline].getScheduledDate().getTime(), _scope[:active_pipeline_in_pipeline]))) -%>\n    </div>\n    <% __scope = {:pipeline => _scope[:active_pipeline_in_pipeline],
                                                                         :total_width => 20.0,
                                                                         :rendering_gadget => _scope[:rendering_gadget] }; -%><div class=\"stages\">\n    <div class=\"latest_stage\">\n            <%= json_escape((__scope[:pipeline].getPipelineStatusMessage())) -%>\n    </div>\n\n    <% __scope[:pipeline].getStageHistory().each do |stage_in_stage_bar| %>\n        <% ___scope = {:pipeline => __scope[:pipeline],
                                           :stage => stage_in_stage_bar,
                                           :total_width => __scope[:total_width],
                                           :rendering_gadget => __scope[:rendering_gadget]}; -%><% ___scope[:rendering_gadget] ||= false %>\n<% if placeholder_stage?(___scope[:stage]) -%>\n    <span class='stage'>\n        <% ____scope = {:pipeline => ___scope[:pipeline], :stage => ___scope[:stage], :total_width => ___scope[:total_width]}; -%><%
   ____scope[:state] = ____scope[:stage].getState()
   ____scope[:stage_name] = ____scope[:stage].getName()
   ____scope[:last_run_stage] = ____scope[:pipeline].isLatestStage(____scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((____scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((____scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [____scope[:stage_name], ____scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(____scope[:pipeline].getStageHistory().size(), ____scope[:last_run_stage], ____scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(____scope[:state]))) -%>\n    </div>\n</div>\n    </span>\n<% else -%>\n    <a href='<%= json_escape((stage_detail_path(:pipeline_name => ___scope[:pipeline].getName(),
                                   :pipeline_counter => ___scope[:pipeline].getCounter(),
                                   :stage_name => ___scope[:stage].getName(),
                                   :stage_counter => ___scope[:stage].getCounter(),
                                   :only_path => !___scope[:rendering_gadget]))) -%>' class='stage' <%= json_escape((___scope[:rendering_gadget] ? "target='_blank'" : "")) -%>>\n        <% ____scope = {:pipeline => ___scope[:pipeline], :stage => ___scope[:stage], :total_width => ___scope[:total_width]}; -%><%
   ____scope[:state] = ____scope[:stage].getState()
   ____scope[:stage_name] = ____scope[:stage].getName()
   ____scope[:last_run_stage] = ____scope[:pipeline].isLatestStage(____scope[:stage])
%>\n<div class=\"stage_bar_wrapper <%= json_escape((____scope[:last_run_stage] ? " last_run_stage" : "")) -%>\">\n    <div class=\"stage_bar <%= json_escape((____scope[:state])) -%>\" title=\"<%= json_escape(("%s (%s)" % [____scope[:stage_name], ____scope[:state]])) -%>\" style='width: <%= json_escape((stage_width_em(____scope[:pipeline].getStageHistory().size(), ____scope[:last_run_stage], ____scope[:total_width]))) -%>'>\n        <%= json_escape((check_for_cancelled_contents(____scope[:state]))) -%>\n    </div>\n</div>\n    </a>\n<% end -%>\n    <% end %>\n</div>\n\n</div>\n\n            </div>\n            <% _scope = {:active_pipeline_in_pipeline => active_pipeline_in_pipeline, :should_display_previously_blurb =>  scope[:should_display_previously_blurb]}; -%><% _scope[:rendering_gadget] ||= false %>\n<div class=\"previously_wrapper\">\n    <% if _scope[:should_display_previously_blurb] && _scope[:active_pipeline_in_pipeline].isAnyStageActive() -%>\n        <% _scope[:active_stage] = _scope[:active_pipeline_in_pipeline].activeStage() -%>\n        <% if _scope[:active_stage].hasPreviousStage() -%>\n            <div class=\"previously\">\n                <span class=\"label\"><%= json_escape((l.string("Previously Blurb"))) -%></span>\n                <% _scope[:previous_stage] = _scope[:active_stage].getPreviousStage() -%>\n                <% _scope[:previous_stage_identifier] = _scope[:previous_stage].getIdentifier() -%>\n                <% _scope[:stage_result] = _scope[:previous_stage].getResult() -%>\n                <a class=\"result\" href=\"<%= json_escape((stage_detail_path_for_identifier(_scope[:previous_stage_identifier], :only_path => !_scope[:rendering_gadget]))) -%>\" <%= json_escape((_scope[:rendering_gadget] ? "target='_blank'" : "")) -%> \n                   title=\"<%= json_escape((_scope[:previous_stage_identifier].getPipelineLabel())) -%>\">\n                    <span class=\"color_code_small <%= json_escape((_scope[:stage_result])) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(_scope[:stage_result]))) -%>\n                    </span> <%= json_escape((_scope[:stage_result])) -%>\n                </a>\n            </div>\n        <% end -%>\n    <% end -%>\n</div>\n\n        <% end -%>\n    </div>\n<% end -%>\n\n<div class=\"pipeline_operations\">\n    <% if scope[:show_controls] && scope[:pipeline_model].canOperate() -%>\n        <% scope[:trigger_label] = l.string('TRIGGER')
           scope[:trigger_with_option_label] = l.string('TRIGGER_WITH_OPTIONS')
        -%>\n        <% _scope = {:pipeline_model=> scope[:pipeline_model], :label=>"#{scope[:trigger_label]}"}; -%><% _scope[:pipeline] = _scope[:pipeline_model].getLatestPipelineInstance() -%>\n<%= json_escape((pipeline_operations_blocking_form_remote_tag(:url => api_pipeline_action_path(:pipeline_name => _scope[:pipeline].getName(), :action => "schedule"),
                    :html => {
                        :onsubmit => "PipelineOperations.onTrigger(this, '#{_scope[:pipeline].getName()}', '#{api_pipeline_action_path(:pipeline_name => _scope[:pipeline].getName(), :action => "schedule")}'); return false;"
                    }))) -%>\n    <div class='operate trigger_wrapper'>\n        <%= json_escape((submit_button(_scope[:label], {:type=> 'image', :disabled => !_scope[:pipeline_model].canForce(), :id => "deploy-#{_scope[:pipeline].getName()}"}))) -%>\n    </div>\n<%= json_escape((end_form_tag)) -%>\n\n        <% _scope = {:pipeline => scope[:pipeline_model].getLatestPipelineInstance(),
                                                                                                 :label => "#{scope[:trigger_with_option_label]}",
                                                                                                 :can_trigger => scope[:pipeline_model].canForce(),
                                                                                                 :has_upstream_material => false}; -%><%= json_escape((pipeline_operations_blocking_form_remote_tag :url => { :controller => 'pipelines', :action => 'show_for_trigger' },
                             :html => {
                                     :onsubmit => "PipelineOperations.onTriggerWithOptions(this, '#{_scope[:pipeline].getName()}', '#{l.string('TRIGGER')}', '#{pipeline_show_with_option_path}'); return false;"
                             })) -%>\n    <input type=\"hidden\" name=\"pipeline_name\" value=\"<%= json_escape((_scope[:pipeline_name]=_scope[:pipeline].getName())) -%>\"/>\n    <div class='operate trigger_with_options_wrapper'>\n        <%= json_escape((submit_button(_scope[:label], :type => 'image', :disabled => !_scope[:can_trigger], :id => "deploy-with-options-#{_scope[:pipeline].getName()}"))) -%>\n    </div>\n    <% if _scope[:has_upstream_material] %>\n        <input type=\"hidden\" name=\"pegged_revisions[<%= json_escape((_scope[:pegged_pipeline])) -%>]\" value=\"<%= json_escape((_scope[:pegged_revision])) -%>\"/>\n    <% end%>\n<%= json_escape((end_form_tag)) -%>\n        <% _scope = {:pause_info => scope[:pipeline_model].getPausedInfo(), :pipeline_name => scope[:pipeline_name]}; -%><% if _scope[:pause_info].isPaused() %>\n    <form action=\"<%= json_escape((unpause_pipeline_path(:pipeline_name => _scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onUnPause(this, '<%= json_escape((_scope[:pipeline_name])) -%>', '<%= json_escape((unpause_pipeline_path(_scope[:pipeline_name]))) -%>'); return false;\">\n        <div class='operate unpause_wrapper'>\n            <%= json_escape((submit_button("Unpause", :type=> "image", :class => 'primary', :id => "unpause-#{_scope[:pipeline_name]}"))) -%>\n        </div>\n    </form>\n<% else
    _scope[:pause_info_id] = "pause-info-#{_scope[:pipeline_name]}"
    _scope[:pause_onclick] = "Modalbox.show($(\"#{_scope[:pause_info_id]}\"),{title: \"Pause pipeline: #{_scope[:pipeline_name]} \",overlayClose:false})"
-%>\n    <div class='operate pause_wrapper'>\n        <%= json_escape((submit_button("Pause", {:type=> "image", :id => "confirm-pause-#{_scope[:pipeline_name]}", :onclick => "#{_scope[:pause_onclick]}"}))) -%>\n    </div>\n    <div id=\"<%= json_escape((_scope[:pause_info_id])) -%>\" style=\"display:none\">\n        <form action=\"<%= json_escape((pause_pipeline_path(:pipeline_name => _scope[:pipeline_name]))) -%>\" method=\"post\" onsubmit=\"PipelineOperations.onPause(this, '<%= json_escape((_scope[:pipeline_name])) -%>', '<%= json_escape((pause_pipeline_path(_scope[:pipeline_name]))) -%>'); return false;\">\n            <div class=\"sub_tab_container\">\n                <div class='pause_reason'>\n                    Specify a reason for pausing schedule on pipeline '<%= json_escape((_scope[:pipeline_name])) -%>': <input type=\"text\" name=\"pauseCause\" maxlength=\"255\"/>\n                </div>\n            </div>\n            <div class=\"actions\">\n                <%= json_escape((submit_button("Ok", :class=> "primary", :id => "pause-#{_scope[:pipeline_name]}"))) -%>\n                <%= json_escape((submit_button("Close", :onclick => "Modalbox.hide()", :type => "button"))) -%>\n            </div>\n        </form>\n    </div>\n<% end -%>\n    <% end -%>\n</div>\n<% _scope = {:pause_info => scope[:pipeline_model].getPausedInfo()}; -%><% if _scope[:pause_info].isPaused() %>\n    <span class=\"pause_description paused_by\">Paused by <%= json_escape((_scope[:pause_info].getPauseBy())) -%> </span>\n    <span class=\"pause_description pause_message\">(<%= json_escape((h(_scope[:pause_info].getPauseCause()))) -%>)</span>\n<% end %>", "parent_id" : <%= "#{pipeline_group_id}".to_json %>, "index" : <%= j %>, "type" : "pipeline" },
            <% end -%>
        <% end %>
    <% end %>
    "pipelines_selector_pipelines": { "html" : "<% scope = {}; -%><%
   @pipeline_configs.each do |pipeline_group_in_pipeline_selector|
    scope[:group_name] = pipeline_group_in_pipeline_selector.getGroup()
    scope[:grp_id]="select_group_#{scope[:group_name]}"
    scope[:group_selected] = @pipeline_selections.includesGroup(pipeline_group_in_pipeline_selector)
%>\n    <div id='selector_group_<%= json_escape((scope[:group_name])) -%>' class=\"selector_group\">\n        <input type=\"checkbox\" id=\"<%= json_escape((scope[:grp_id])) -%>\" name=\"selector[group][]\" value=\"<%= json_escape((scope[:group_name])) -%>\"\n               <% if scope[:group_selected] %>\n               checked=\"checked\"\n               <% end %>\n               />\n        <label for=\"<%= json_escape((scope[:grp_id])) -%>\" class=\"label inline\"><%= json_escape((scope[:group_name])) -%></label>\n        <% pipeline_group_in_pipeline_selector.each do |pipeline_in_pipeline_selector|
            scope[:pipeline_name] = pipeline_in_pipeline_selector.name()
            scope[:pipeline_id] = "select_pipeline_#{scope[:pipeline_name]}"
        %>\n            <div id='selector_pipeline_<%= json_escape((scope[:pipeline_name])) -%>' class=\"selector_pipeline\">\n                <input type=\"checkbox\" id=\"<%= json_escape((scope[:pipeline_id])) -%>\" name=\"selector[pipeline][]\" value=\"<%= json_escape((scope[:pipeline_name])) -%>\"\n                       <% if scope[:group_selected] || @pipeline_selections.includesPipeline(pipeline_in_pipeline_selector) %>\n                       checked=\"checked\"\n                       <% end %>\n                       />\n                <label for=\"<%= json_escape((scope[:pipeline_id])) -%>\" class=\"label inline\"><%= json_escape((scope[:pipeline_name])) -%></label>\n            </div>\n        <% end %>\n    </div>\n<% end %>", "type" : "pipeline_selector" }
}