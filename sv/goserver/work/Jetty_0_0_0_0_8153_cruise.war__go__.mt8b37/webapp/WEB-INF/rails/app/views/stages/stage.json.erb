{
    <%case params[:action]
        when 'overview' %>
            "jobs_failed": {"html": "<% scope = {:message => "FAILED_JOBS", :jobs => @stage.nonPassedJobs(),:parent_id=>"jobs_failed"}; -%><span class=\"hidereveal_expander\"><%= json_escape((l.string(scope[:message], [scope[:jobs].size()]))) -%></span>\n<% if scope[:jobs].size()>0 %>\n    <ul class=\"hidereveal_content\">\n        <% scope[:jobs].each do |job_in_job_breakdown| %>\n            <li class=\"job\">\n                <a class=\"\" href=\"<%= json_escape((url_for_job(job_in_job_breakdown))) -%>\">\n                    <div class=\"color_code_small <%= json_escape((job_in_job_breakdown.getStatus())) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(job_in_job_breakdown.getStatus()))) -%>\n                    </div>\n                    <%= json_escape((smart_word_breaker(job_in_job_breakdown.getName()))) -%>\n                </a>\n                <% unless job_in_job_breakdown.isCompleted() %>\n                    <% _scope = {:job => job_in_job_breakdown }; -%><%
   _scope[:show_elapsed] = _scope[:show_elapsed].nil? ? true : _scope[:show_elapsed]
   _scope[:elapsed_time] = l.localizeDuration(_scope[:job].getElapsedTime())
   _scope[:has_elapsed_time] = !_scope[:elapsed_time].empty?
   if _scope[:job].isCompleted() or (_scope[:job].getPercentComplete() == 0 or _scope[:job].getPercentComplete() == 100) %>\n    <div class=\"elapsed_time\">\n        <% if _scope[:has_elapsed_time] %>\n            <% if _scope[:show_elapsed] %>\n                <br/>\n                <%= json_escape(("#{l.string('Elapsed')}: ")) -%>\n            <% end %>\n            <%= json_escape((_scope[:elapsed_time])) -%>\n        <% end %>\n    </div>\n<% else %>\n    <div class=\"progress_bar_container\" title=\"<%= json_escape((_scope[:elapsed_time])) -%> (<%= json_escape((_scope[:job].getPercentComplete())) -%>%)\">\n        <div class=\"progress_bar\" style=\"width: <%= json_escape((_scope[:job].getPercentComplete())) -%>%;\"></div>\n    </div>\n<% end %>\n \n                <% end %>\n            </li>\n        <% end %>\n    </ul>\n    <script type='text/javascript'>\n        Util.on_load(new function() {\n            AjaxRefreshers.main().afterRefreshOf('<%= json_escape((scope[:parent_id])) -%>', (function() {\n                make_collapsable('<%= json_escape((scope[:parent_id])) -%>');\n            }));\n        });\n    </script>\n<% end %>\n"},
            "jobs_passed": {"html": "<% scope = {:message => "PASSED_JOBS", :jobs => @stage.passedJobs(),:parent_id=>"jobs_passed"}; -%><span class=\"hidereveal_expander\"><%= json_escape((l.string(scope[:message], [scope[:jobs].size()]))) -%></span>\n<% if scope[:jobs].size()>0 %>\n    <ul class=\"hidereveal_content\">\n        <% scope[:jobs].each do |job_in_job_breakdown| %>\n            <li class=\"job\">\n                <a class=\"\" href=\"<%= json_escape((url_for_job(job_in_job_breakdown))) -%>\">\n                    <div class=\"color_code_small <%= json_escape((job_in_job_breakdown.getStatus())) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(job_in_job_breakdown.getStatus()))) -%>\n                    </div>\n                    <%= json_escape((smart_word_breaker(job_in_job_breakdown.getName()))) -%>\n                </a>\n                <% unless job_in_job_breakdown.isCompleted() %>\n                    <% _scope = {:job => job_in_job_breakdown }; -%><%
   _scope[:show_elapsed] = _scope[:show_elapsed].nil? ? true : _scope[:show_elapsed]
   _scope[:elapsed_time] = l.localizeDuration(_scope[:job].getElapsedTime())
   _scope[:has_elapsed_time] = !_scope[:elapsed_time].empty?
   if _scope[:job].isCompleted() or (_scope[:job].getPercentComplete() == 0 or _scope[:job].getPercentComplete() == 100) %>\n    <div class=\"elapsed_time\">\n        <% if _scope[:has_elapsed_time] %>\n            <% if _scope[:show_elapsed] %>\n                <br/>\n                <%= json_escape(("#{l.string('Elapsed')}: ")) -%>\n            <% end %>\n            <%= json_escape((_scope[:elapsed_time])) -%>\n        <% end %>\n    </div>\n<% else %>\n    <div class=\"progress_bar_container\" title=\"<%= json_escape((_scope[:elapsed_time])) -%> (<%= json_escape((_scope[:job].getPercentComplete())) -%>%)\">\n        <div class=\"progress_bar\" style=\"width: <%= json_escape((_scope[:job].getPercentComplete())) -%>%;\"></div>\n    </div>\n<% end %>\n \n                <% end %>\n            </li>\n        <% end %>\n    </ul>\n    <script type='text/javascript'>\n        Util.on_load(new function() {\n            AjaxRefreshers.main().afterRefreshOf('<%= json_escape((scope[:parent_id])) -%>', (function() {\n                make_collapsable('<%= json_escape((scope[:parent_id])) -%>');\n            }));\n        });\n    </script>\n<% end %>\n"},
            "jobs_in_progress": {"html": "<% scope = {:message => "IN_PROGRESS_JOBS", :jobs => @stage.inProgressJobs(),:parent_id=>"jobs_in_progress"}; -%><span class=\"hidereveal_expander\"><%= json_escape((l.string(scope[:message], [scope[:jobs].size()]))) -%></span>\n<% if scope[:jobs].size()>0 %>\n    <ul class=\"hidereveal_content\">\n        <% scope[:jobs].each do |job_in_job_breakdown| %>\n            <li class=\"job\">\n                <a class=\"\" href=\"<%= json_escape((url_for_job(job_in_job_breakdown))) -%>\">\n                    <div class=\"color_code_small <%= json_escape((job_in_job_breakdown.getStatus())) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(job_in_job_breakdown.getStatus()))) -%>\n                    </div>\n                    <%= json_escape((smart_word_breaker(job_in_job_breakdown.getName()))) -%>\n                </a>\n                <% unless job_in_job_breakdown.isCompleted() %>\n                    <% _scope = {:job => job_in_job_breakdown }; -%><%
   _scope[:show_elapsed] = _scope[:show_elapsed].nil? ? true : _scope[:show_elapsed]
   _scope[:elapsed_time] = l.localizeDuration(_scope[:job].getElapsedTime())
   _scope[:has_elapsed_time] = !_scope[:elapsed_time].empty?
   if _scope[:job].isCompleted() or (_scope[:job].getPercentComplete() == 0 or _scope[:job].getPercentComplete() == 100) %>\n    <div class=\"elapsed_time\">\n        <% if _scope[:has_elapsed_time] %>\n            <% if _scope[:show_elapsed] %>\n                <br/>\n                <%= json_escape(("#{l.string('Elapsed')}: ")) -%>\n            <% end %>\n            <%= json_escape((_scope[:elapsed_time])) -%>\n        <% end %>\n    </div>\n<% else %>\n    <div class=\"progress_bar_container\" title=\"<%= json_escape((_scope[:elapsed_time])) -%> (<%= json_escape((_scope[:job].getPercentComplete())) -%>%)\">\n        <div class=\"progress_bar\" style=\"width: <%= json_escape((_scope[:job].getPercentComplete())) -%>%;\"></div>\n    </div>\n<% end %>\n \n                <% end %>\n            </li>\n        <% end %>\n    </ul>\n    <script type='text/javascript'>\n        Util.on_load(new function() {\n            AjaxRefreshers.main().afterRefreshOf('<%= json_escape((scope[:parent_id])) -%>', (function() {\n                make_collapsable('<%= json_escape((scope[:parent_id])) -%>');\n            }));\n        });\n    </script>\n<% end %>\n"},

        <%when 'jobs'%>
            "jobs_grid": {"html": "<% scope = {:jobs => @jobs, :stage => @stage, :has_operate_permissions => @has_operate_permissions }; -%><%- stage_state = scope[:stage].getState()
    if stage_state.completed() -%>\n    <%= json_escape((form_tag rerun_jobs_path(:tab => params[:action]))) -%>\n<%- end -%>\n\n<div id=\"job_actions\">\n<%- if scope[:has_operate_permissions] && scope[:stage].getState().completed() -%>\n        <%= json_escape((submit_button(l.string("RERUN")))) -%>\n    <% end %>\n</div>\n\n<table class=\"jobs_summary list_table <%= json_escape((scope[:stage].getStage().hasRerunJobs() ? "stage_with_rerun_jobs" : "")) -%>\">\n    <tr>\n        <th>&nbsp;</th>\n        <th>Name</th>\n        <th>Result</th>\n        <th>State</th>\n        <th>Duration</th>\n        <th>Agent</th>\n    </tr>\n\n    <% _scope = {:jobs => scope[:jobs], :stage_state => stage_state, :has_operate_permissions => scope[:has_operate_permissions]}; -%><% _scope[:jobs].each do |job| %>\n    <tr class=\"job <%= json_escape((job.isRerun() ? "is_rerun" : "not_rerun")) -%>\">\n        <td class=\"selector\">\n            <% if _scope[:has_operate_permissions] && _scope[:stage_state].completed() %>\n                <%= json_escape((check_box_tag("jobs[]", job.getName(), false, :class => "job_selector"))) -%>\n            <% end %>\n        </td>\n        <td class=\"job_name\">\n            <a href=\"<%= json_escape((url_for_job(job))) -%>\">\n                <%= json_escape((smart_word_breaker(job.getName()))) -%></a>\n        </td>\n        <td class=\"job_result\">\n            <div class=\"color_code_small <%= json_escape((l.string(job.getStatus()))) -%>\">\n                <%= json_escape((check_for_cancelled_contents(job.getStatus()))) -%>\n            </div>\n            <%- if job.isRerun() -%>\n                <img class=\"rerun_job_icon\" src=\"<%= json_escape((image_path('/images/g9/icons/icon_rerun_flag.png'))) -%>\">\n            <%- end -%>\n            <%= json_escape((l.string(job.getStatus()))) -%>\n        </td>\n        <td class=\"job_state\"><%= json_escape((l.messageFor(job.getState()))) -%></td>\n        <td class=\"duration\">\n            <% __scope = {:job => job , :show_elapsed => false}; -%><%
   __scope[:show_elapsed] = __scope[:show_elapsed].nil? ? true : __scope[:show_elapsed]
   __scope[:elapsed_time] = l.localizeDuration(__scope[:job].getElapsedTime())
   __scope[:has_elapsed_time] = !__scope[:elapsed_time].empty?
   if __scope[:job].isCompleted() or (__scope[:job].getPercentComplete() == 0 or __scope[:job].getPercentComplete() == 100) %>\n    <div class=\"elapsed_time\">\n        <% if __scope[:has_elapsed_time] %>\n            <% if __scope[:show_elapsed] %>\n                <br/>\n                <%= json_escape(("#{l.string('Elapsed')}: ")) -%>\n            <% end %>\n            <%= json_escape((__scope[:elapsed_time])) -%>\n        <% end %>\n    </div>\n<% else %>\n    <div class=\"progress_bar_container\" title=\"<%= json_escape((__scope[:elapsed_time])) -%> (<%= json_escape((__scope[:job].getPercentComplete())) -%>%)\">\n        <div class=\"progress_bar\" style=\"width: <%= json_escape((__scope[:job].getPercentComplete())) -%>%;\"></div>\n    </div>\n<% end %>\n \n        </td>\n        <td class=\"agent\"\n            <%- if job.hasAgentInfo() -%>\n                title=\"<%= json_escape((job.getAgentLocation())) -%>\">\n                <% agent_that_job_ran_on = "#{smart_word_breaker(job.getHostname())}(#{job.getIpAddress()})" %>\n                <%= json_escape((link_to(agent_that_job_ran_on, agent_detail_path(:uuid => job.getUuid())))) -%>\n            <%- else -%>>\n                <%= json_escape((l.string('Not yet assigned'))) -%>\n            <%- end -%>\n        </td>\n    </tr>\n<% end %>\n</table>\n<%- if scope[:stage].getState().completed() -%>\n    </form>\n<%- end -%>"},
        <%when 'tests'%>
            <% cache(view_cache_key.forFbhOfStagesUnderPipeline(@stage.getStage().getIdentifier().pipelineIdentifier()), :subkey => view_cache_key.forFailedBuildHistoryStage(@stage.getStage(),@response_format)) do %>
                "non_passing_tests": {"html": "<% scope = {}; -%>\n    <% if @failing_tests_error_message %>\n        <span class=\"error\"><%= json_escape((@failing_tests_error_message)) -%></span>\n    <% elsif @failing_tests.numberOfTests() == 0 %>\n        <h3>\n            <span class=\"message\"><%= json_escape((l.string("There are tests configured in this stage but could not compute results."))) -%></span>\n        </h3>\n    <% elsif @stage.getState().equals(com.thoughtworks.cruise.domain.StageState::Passed) %>\n        <h3>\n            <div class=\"counts\">\n                <span class=\"total\"><%= json_escape((l.string("Tests Run: X", [@failing_tests.numberOfTests()]))) -%></span>\n                <span class=\"failures\"><%= json_escape((l.string("TOTAL_FAILURES_COUNT", [@failing_tests.totalFailureCount()]))) -%></span>\n                <span class=\"errors\"><%= json_escape((l.string("TOTAL_ERRORS_COUNT", [@failing_tests.totalErrorCount()]))) -%></span>\n            </div>\n            <% if @failing_tests.totalFailureCount() > 0 || @failing_tests.totalErrorCount() > 0 %>\n                <div class=\"message\"><%= json_escape((l.string("THE_STAGE_PASSED_WITH_WARNING"))) -%></div>\n                <div class=\"message\"><%= json_escape((l.string("THE_STAGE_PASSED_WITH_WARNING_FIX"))) -%></div>\n            <% else %>\n                <span class=\"message\"><%= json_escape((l.string("THE_STAGE_PASSED"))) -%></span>\n            <% end %>\n        </h3>\n    <% else %>\n        <h3>\n            <div class=\"counts\">\n                <span class=\"total\"><%= json_escape((l.string("Tests Run: X", [@failing_tests.numberOfTests()]))) -%></span>\n                <span class=\"failures\"><%= json_escape((l.string("TOTAL_FAILURES_COUNT", [@failing_tests.totalFailureCount()]))) -%></span>\n                <span class=\"errors\"><%= json_escape((l.string("TOTAL_ERRORS_COUNT", [@failing_tests.totalErrorCount()]))) -%></span>\n            </div>\n            <span class=\"message\"><%= json_escape((l.string("New Tests Broken Since:"))) -%> <span class=\"secondary\">(<%= json_escape((l.string("ordered by check-in/material time"))) -%>)</span></span>\n        </h3>\n        <ol>\n            <% @failing_tests.failingTestsInPipelines().each_with_index do |pipeline_in_non_passing_tests, idx_in_non_passing_tests| %>\n                <li class=\"failing_pipeline\" id=\"failing_pipeline<%= json_escape((idx_in_non_passing_tests)) -%>\">\n                    <div class=\"pipeline_bar\">\n                        <div class=\"counts secondary\">\n                            <span class=\"failures\"><%= json_escape((l.string("UNIQUE_FAILURES_COUNT", [pipeline_in_non_passing_tests.failureCount()]))) -%></span>\n                            <span class=\"errors\"><%= json_escape((l.string("UNIQUE_ERRORS_COUNT", [pipeline_in_non_passing_tests.errorCount()]))) -%></span></div>\n                        <div class=\"color_code Failed\"></div>\n                        <div class=\"pipeline_details\">\n                            <span class=\"pipeline_label secondary\"><%= json_escape((l.string("Pipeline Label:"))) -%> <%= json_escape((pipeline_in_non_passing_tests.getLabel())) -%></span>\n                            <% scope[:changes_button_id] = build_cause_popup_id_for_pipeline_counter(pipeline_in_non_passing_tests.getCounter(), "changes_button_") -%>\n                            <span class=\"changes_button_wrapper\">\n                                <%= json_escape((link_to(l.string("CHANGES"), build_cause_path(:pipeline_name => @stage.getIdentifier().getPipelineName(), :pipeline_counter => pipeline_in_non_passing_tests.getCounter()), :id => scope[:changes_button_id], :class => "show_panel submit_small fbh_build_cause_button"))) -%>\n                            </span>\n                        </div>\n                        <script type=\"text/javascript\">\n                            Util.namespace('fbh_build_cause_urls').set('<%= json_escape((scope[:changes_button_id])) -%>', '<%= json_escape((build_cause_path(:pipeline_name => params[:pipeline_name], :pipeline_counter => pipeline_in_non_passing_tests.getCounter()))) -%>');\n                        </script>\n                    </div>\n                    <%unless pipeline_in_non_passing_tests.users().empty?%>\n                        <div class=\"users\">By <%= json_escape((pipeline_in_non_passing_tests.users().join(", "))) -%></div>\n                    <%end%>\n                    <div class=\"block_to_hide_or_reveal_by_above_pipeline_bar\">\n                        <%if pipeline_in_non_passing_tests.failingSuites().empty?%>\n                            These changes did not break any of the currently failing tests.\n                        <%end%>\n                        <% pipeline_in_non_passing_tests.failingSuites().each do |suite_in_non_passing_tests| %>\n                            <div class=\"suite\"><%= json_escape((l.string("Suite:"))) -%> <span class=\"suite_name\"><%= json_escape((suite_in_non_passing_tests.fullName())) -%></span></div>\n                            <table class=\"test_suite\">\n                                <tr>\n                                    <td colspan=\"3\">\n\n                                    </td>\n                                </tr>\n                                <%
                                   scope[:row] = 0;
                                   suite_in_non_passing_tests.tests().each do |test_in_non_passing_tests|
                                       scope[:row_class] = ""
                                       scope[:row_class] = "alt_row" unless scope[:row] %2 != 0
                                       scope[:row] = scope[:row] + 1
                                %>\n                                    <tr class=\"test_case <%= json_escape((scope[:row_class])) -%>\">\n                                        <td class=\"test_status\">\n                                            <div class=\"<%= json_escape((test_in_non_passing_tests.getStatus())) -%>\">&nbsp;</div>\n                                        </td>\n                                        <td class=\"test_name\">\n                                            <span class=\"name\"><%= json_escape((test_in_non_passing_tests.getName())) -%></span>\n                                                <span class=\"jobs\">\n                                                    (<%= json_escape((test_in_non_passing_tests.getJobs().map do |job_identifier_in_non_passing_tests|
                                                        fbh_failure_detail_popup_id_for_failure(job_identifier_in_non_passing_tests, suite_in_non_passing_tests.fullName(), test_in_non_passing_tests.getName())
                                                        link_to(job_identifier_in_non_passing_tests.getBuildName(), url_for_job_identifier(job_identifier_in_non_passing_tests)) + failure_details_link(job_identifier_in_non_passing_tests, suite_in_non_passing_tests.fullName(), test_in_non_passing_tests.getName())
                                                     end.join(","))) -%>)\n                                            </span>\n                                        </td>\n                                    </tr>\n                                <% end %>\n                            </table>\n                        <% end %>\n                    </div>\n                </li>\n            <% end %>\n        </ol>\n    <% end %>\n\n"},
            <%end%>
        <%when 'pipeline'%>
            "pipeline_visualization":  {"html": "<% scope = {}; -%><%
   scope[:pipeline] = @graph.pipeline()
   scope[:current_pipeline_name] = scope[:pipeline].getName()
%>\n    <div class=\"upstream\">\n        <h4 class=\"secondary\">Upstream</h4>\n        <% scope[:pipeline].getCurrentRevisions().each_with_index do |revision_in_pipeline_dep, index_upstream|
            scope[:material] = revision_in_pipeline_dep.getMaterial()
            scope[:rev] = revision_in_pipeline_dep.getRevision()
        %>\n            <div id=\"upstream_<%= json_escape((index_upstream)) -%>\" class=\"pipeline\">\n                <div class=\"content\">\n                    <div class=\"material <%= json_escape((material_type(scope[:material]))) -%>\" title=\"<%= json_escape((scope[:material].getDisplayName())) -%> - <%= json_escape((revision_for(revision_in_pipeline_dep))) -%>\"><%= json_escape((scope[:material].getTypeForDisplay())) -%></div>\n                    <% if dependency?(scope[:material]) -%>\n                        <% scope[:upstream_pipeline_name] = scope[:rev].getPipelineName() -%>\n                        <% scope[:upstream_pipeline_label] = scope[:rev].getPipelineLabel() -%>\n                        <div><%= json_escape((link_to(smart_word_breaker(scope[:upstream_pipeline_name]), url_for_pipeline(scope[:upstream_pipeline_name])))) -%></div>\n                        <div><%= json_escape((smart_word_breaker(revision_in_pipeline_dep.getLatestShortRevision()))) -%></div>\n                        <%= json_escape((link_to smart_word_breaker(scope[:upstream_pipeline_label]), url_for_dmr(scope[:rev]))) -%>\n                    <% else -%>\n                        <div><%= json_escape((smart_word_breaker(scope[:material].getDisplayName()))) -%> - <%= json_escape((smart_word_breaker(revision_in_pipeline_dep.getLatestShortRevision()))) -%></div>\n                    <% end -%>\n                </div>\n            </div>\n        <% end %>\n    </div>\n    <div class=\"current\">\n        <h4 class=\"secondary\">Current</h4>\n\n        <div id=\"current_<%= json_escape((scope[:current_pipeline_name])) -%>\" class=\"pipeline\">\n            <div class=\"name\">\n                <%= json_escape((link_to(smart_word_breaker(scope[:current_pipeline_name]), url_for_pipeline(scope[:current_pipeline_name])))) -%>\n            </div>\n            <div class=\"content\">\n                Label: <%= json_escape((link_to smart_word_breaker(truncate(scope[:pipeline].getLabel(), :length => 25)), "#", {:title => scope[:pipeline].getLabel()})) -%>\n                <% _scope = {:pipeline => scope[:pipeline], :total_width => 10.0 }; -%><div class=\"stages\">\n    <% _scope[:pipeline].getStageHistory().each do |stage| %>\n        <% __scope = {:pipeline => _scope[:pipeline], :stage => stage, :total_width => _scope[:total_width]}; -%><% if placeholder_stage?(__scope[:stage]) -%>\n    <span class='stage'>\n        <% ___scope = {:pipeline => __scope[:pipeline], :stage => __scope[:stage], :total_width => __scope[:total_width]}; -%><%
   ___scope[:state] = ___scope[:stage].getState()
   ___scope[:stage_name] = ___scope[:stage].getName()
%>\n<div class=\"stage_bar <%= json_escape((___scope[:state])) -%>\"\n     title=\"<%= json_escape(("%s (%s)" % [___scope[:stage_name], ___scope[:state]])) -%>\"\n     style='width: <%= json_escape((stage_width_em(___scope[:pipeline].getStageHistory().size(), false, ___scope[:total_width]))) -%>'>\n    <%= json_escape((check_for_cancelled_contents(___scope[:state]))) -%>\n</div>\n\n    </span>\n<% else -%>\n    <a href='<%= json_escape((stage_detail_path(:pipeline_name => __scope[:pipeline].getName(), :pipeline_counter => __scope[:pipeline].getCounter(), :stage_name => __scope[:stage].getName(), :stage_counter => __scope[:stage].getCounter()))) -%>' class='stage'>\n        <% ___scope = {:pipeline => __scope[:pipeline], :stage => __scope[:stage], :total_width => __scope[:total_width]}; -%><%
   ___scope[:state] = ___scope[:stage].getState()
   ___scope[:stage_name] = ___scope[:stage].getName()
%>\n<div class=\"stage_bar <%= json_escape((___scope[:state])) -%>\"\n     title=\"<%= json_escape(("%s (%s)" % [___scope[:stage_name], ___scope[:state]])) -%>\"\n     style='width: <%= json_escape((stage_width_em(___scope[:pipeline].getStageHistory().size(), false, ___scope[:total_width]))) -%>'>\n    <%= json_escape((check_for_cancelled_contents(___scope[:state]))) -%>\n</div>\n\n    </a>\n<% end -%>\n\n    <% end %>\n</div>\n\n            </div>\n        </div>\n    </div>\n    <div class=\"downstream\">\n        <h4 class=\"secondary\">Downstream</h4>\n        <%           
           @graph.groupedDependencies().each do |entry_in_dep|
           scope[:downstream_pipeline_name], scope[:models] = entry_in_dep
        %>\n            <div id=\"downstream_<%= json_escape((scope[:downstream_pipeline_name])) -%>\" class=\"pipeline\">\n\n                <div class=\"title\">\n                    <span class=\"name\"><%= json_escape((link_to(smart_word_breaker(scope[:downstream_pipeline_name]), url_for_pipeline(scope[:downstream_pipeline_name])))) -%></span>\n                </div>\n                <div class=\"content\">\n                    <% scope[:models].each do |model_in_dep| %>\n                        <div class=\"pipeline_instance\">\n                            <% if model_in_dep.getCounter() > 0 %>\n                                <%= json_escape((link_to smart_word_breaker(truncate(model_in_dep.getLabel(), :length => 25)), url_for_pipeline_instance(model_in_dep), {:title => model_in_dep.getLabel()})) -%>\n                            <% end %>\n                            <% _scope = {:pipeline => model_in_dep, :total_width => 10.0 }; -%><div class=\"stages\">\n    <% _scope[:pipeline].getStageHistory().each do |stage| %>\n        <% __scope = {:pipeline => _scope[:pipeline], :stage => stage, :total_width => _scope[:total_width]}; -%><% if placeholder_stage?(__scope[:stage]) -%>\n    <span class='stage'>\n        <% ___scope = {:pipeline => __scope[:pipeline], :stage => __scope[:stage], :total_width => __scope[:total_width]}; -%><%
   ___scope[:state] = ___scope[:stage].getState()
   ___scope[:stage_name] = ___scope[:stage].getName()
%>\n<div class=\"stage_bar <%= json_escape((___scope[:state])) -%>\"\n     title=\"<%= json_escape(("%s (%s)" % [___scope[:stage_name], ___scope[:state]])) -%>\"\n     style='width: <%= json_escape((stage_width_em(___scope[:pipeline].getStageHistory().size(), false, ___scope[:total_width]))) -%>'>\n    <%= json_escape((check_for_cancelled_contents(___scope[:state]))) -%>\n</div>\n\n    </span>\n<% else -%>\n    <a href='<%= json_escape((stage_detail_path(:pipeline_name => __scope[:pipeline].getName(), :pipeline_counter => __scope[:pipeline].getCounter(), :stage_name => __scope[:stage].getName(), :stage_counter => __scope[:stage].getCounter()))) -%>' class='stage'>\n        <% ___scope = {:pipeline => __scope[:pipeline], :stage => __scope[:stage], :total_width => __scope[:total_width]}; -%><%
   ___scope[:state] = ___scope[:stage].getState()
   ___scope[:stage_name] = ___scope[:stage].getName()
%>\n<div class=\"stage_bar <%= json_escape((___scope[:state])) -%>\"\n     title=\"<%= json_escape(("%s (%s)" % [___scope[:stage_name], ___scope[:state]])) -%>\"\n     style='width: <%= json_escape((stage_width_em(___scope[:pipeline].getStageHistory().size(), false, ___scope[:total_width]))) -%>'>\n    <%= json_escape((check_for_cancelled_contents(___scope[:state]))) -%>\n</div>\n\n    </a>\n<% end -%>\n\n    <% end %>\n</div>\n\n                        </div>\n                    <%end%>\n                    <% scope[:model] = scope[:models].first()
                        scope[:has_upstream_material], scope[:pegged_pipeline], scope[:pegged_revision] = @graph.hasUpStreamRevisionFor(scope[:model]), nil, nil
                        if scope[:has_upstream_material]
                            scope[:pegged_pipeline] = @graph.dependencyMaterialFor(scope[:model]).getPipelineUniqueFingerprint()
                            scope[:pegged_revision] = @graph.dependencyRevisionFor(scope[:model])
                        end
                    %>\n                    <% _scope = {:pipeline=>scope[:model], :label=>"Trigger with options",
                                                                                                  :can_trigger => (scope[:has_upstream_material] && scope[:model].getCanRun()),
                                                                                                  :has_upstream_material => scope[:has_upstream_material],
                                                                                                  :pegged_pipeline => scope[:pegged_pipeline],
                                                                                                  :pegged_revision => scope[:pegged_revision] }; -%><%= json_escape((pipeline_operations_blocking_form_remote_tag :url => { :controller => 'pipelines', :action => 'show_for_trigger' },
                             :html => {
                                     :onsubmit => "PipelineOperations.onTriggerWithOptions(this, '#{_scope[:pipeline].getName()}', '#{l.string('TRIGGER')}', '#{pipeline_show_with_option_path}'); return false;"
                             })) -%>\n    <input type=\"hidden\" name=\"pipeline_name\" value=\"<%= json_escape((_scope[:pipeline_name]=_scope[:pipeline].getName())) -%>\"/>\n    <div class='operate trigger_with_options_wrapper'>\n        <%= json_escape((submit_button(_scope[:label], :type => 'image', :disabled => !_scope[:can_trigger], :id => "deploy-with-options-#{_scope[:pipeline].getName()}"))) -%>\n    </div>\n    <% if _scope[:has_upstream_material] %>\n        <input type=\"hidden\" name=\"pegged_revisions[<%= json_escape((_scope[:pegged_pipeline])) -%>]\" value=\"<%= json_escape((_scope[:pegged_revision])) -%>\"/>\n    <% end%>\n<%= json_escape((end_form_tag)) -%>\n                </div>\n            </div>\n        <%
           end
        %>\n    </div>\n    <script type=\"text/javascript\">\n        Util.on_load(initPipelineVisualization);\n        $j(window).resize(function(){\n            initPipelineVisualization();\n        });\n    </script>"},
    <%end%>
    "pipeline_status_bar": {"html": "<% scope = {:pipeline => @pipeline, :current_config_version => @current_config_version, :stage_config_version => @stage.getStage().getConfigVersion()}; -%><% unless scope[:pipeline].nil?
   scope[:update_opts] = {:failure => "message_pane", :success => 'function(){}'}
%>\n    <%- if is_config_used_to_run_this_stage_out_of_sync_with_current?(scope[:current_config_version], scope[:stage_config_version]) -%>\n        <div class='config_changed_info notification'>\n            <p class='information'><%= json_escape((l.string("CONFIGURATION_HAS_SINCE_CHANGED_NOTIFICATION"))) -%></p>\n        </div>\n    <%- end -%>\n    <div class=\"pipeline\">\n        <div class=\"stages\">\n            <%
               scope[:after_selected] = false
               scope[:pipeline].getStageHistory().each_with_index do |stage_in_status_bar, idx_in_status_bar|
                   scope[:selected] = params[:stage_name]==(scope[:stage_name]=stage_in_status_bar.getName())
                   scope[:stage_class] = "stage"
                   scope[:show_stage_actions_id] = id_for(stage_in_status_bar, "show_stage_actions")
                   if scope[:selected]
                       scope[:stage_class] += " selected"
                       scope[:after_selected] = true
                   elsif scope[:after_selected]
                       scope[:after_selected] = false
                       scope[:stage_class] += " after_selected"
                   end
            %>\n                <div style='width: <%= json_escape((stage_width_percent(scope[:pipeline].numberOfStages(), scope[:selected], 98))) -%>' class=\"<%= json_escape((scope[:stage_class])) -%>\">\n                    <div class=\"wrapper\">\n                        <% _scope = {:idx_in_status_bar => idx_in_status_bar, :stage_in_status_bar => stage_in_status_bar, :stage_name => scope[:stage_name], :stage_details_action => scope[:stage_details_action]}; -%><%- _scope[:stage_details_action] ||= params[:action] -%>\n<div id=\"stage_bar_<%= json_escape((_scope[:idx_in_status_bar])) -%>\" class=\"row1\">\n    <% if placeholder_stage?(_scope[:stage_in_status_bar]) %>\n        <span class=\"stage_name\"><%= json_escape((_scope[:stage_name])) -%></span>\n    <% else %>\n        <%= json_escape((link_to _scope[:stage_in_status_bar].getName(), stage_bar_url(_scope[:stage_in_status_bar], _scope[:stage_details_action]), :class=> "stage_name")) -%>\n    <% end %>\n\n    <% if _scope[:stage_in_status_bar].hasOperatePermission() %>\n        <%

           if _scope[:stage_in_status_bar].isRunning()
               _scope[:label] = "cancel"
           elsif _scope[:stage_in_status_bar].canRun()
               _scope[:label] = run_stage_label(_scope[:stage_in_status_bar])
           end

           _scope[:operate_class] = "action_#{_scope[:label]}"
        %>\n        <div id=\"operate_<%= json_escape((_scope[:stage_name])) -%>\" class=\"operate secondary <%= json_escape((_scope[:operate_class])) -%>\">\n            <%
               _scope[:id] = "stage_bar_#{_scope[:label]}_#{_scope[:stage_name]}"
               _scope[:html_opts] = {:class => "stage_action", :id => _scope[:id]}
               _scope[:before_opts] = "spinny('operate_#{_scope[:stage_name]}')"
               if _scope[:stage_in_status_bar].canRun() && _scope[:stage_in_status_bar].isScheduled() %>\n                <%= json_escape((blocking_link_to_remote " ", :method => :post, :url => run_stage_path(:stage_name => _scope[:stage_name]), :html => _scope[:html_opts], :update => _scope[:update_opts], :before => _scope[:before_opts])) -%>\n            <% end %>\n            <% if _scope[:stage_in_status_bar].isRunning() %>\n                <%= json_escape((blocking_link_to_remote " ",  :method => :post, :url => cancel_stage_path(:id => _scope[:stage_in_status_bar].getId()), :html => _scope[:html_opts], :update => _scope[:update_opts], :before => _scope[:before_opts])) -%>\n            <% end %>\n        </div>\n    <% end %>\n</div>\n<% _scope[:stage_bar_html_options] = stage_bar_options(_scope[:stage_in_status_bar]) %>\n<div class=\"stage_bar_wrapper\">\n    <% if placeholder_stage?(_scope[:stage_in_status_bar]) %>\n        <div <%= json_escape((_scope[:stage_bar_html_options])) -%>><%= json_escape((check_for_cancelled_contents(_scope[:stage_in_status_bar].getState()))) -%></div>\n    <% else %>\n        <a href=\"<%= json_escape((stage_bar_url(_scope[:stage_in_status_bar], _scope[:stage_details_action]))) -%>\" <%= json_escape((_scope[:stage_bar_html_options])) -%>>\n            <%= json_escape((check_for_cancelled_contents(_scope[:stage_in_status_bar].getState()))) -%>\n        </a>\n    <% end %>\n</div>\n<% if _scope[:idx_in_status_bar] > 0 %>\n    <div class=\"trigger_gate\">\n        <% __scope = {:stage_in_status_bar => _scope[:stage_in_status_bar]}; -%><%
title = if com.thoughtworks.cruise.util.CruiseConstants::DEFAULT_APPROVED_BY == __scope[:stage_in_status_bar].getApprovedBy()
    "Automatically approved"
elsif __scope[:stage_in_status_bar].getApprovedBy().blank?
    "Awaiting approval"
else
    "Approved by #{__scope[:stage_in_status_bar].getApprovedBy()}"
end

clazz = __scope[:stage_in_status_bar].isAutoApproved() ?
        "auto" :
        "manual"

stage_name = __scope[:stage_in_status_bar].getName()
trigger_id = "stage_bar_trigger_" + stage_name
__scope[:html_opts] = {:class => clazz, :title=> title, :id => trigger_id }
   
if __scope[:stage_in_status_bar].canRun() && !__scope[:stage_in_status_bar].isScheduled() %>\n    <%= json_escape((blocking_link_to_remote " ", :method => :post, :url => run_stage_path(:stage_name => stage_name), :html => __scope[:html_opts], :update => __scope[:update_opts], :before => __scope[:before_opts])) -%>\n<% else %>\n    <span class=\"<%= json_escape((clazz)) -%>\" title=\"<%= json_escape((title)) -%>\" id=\"<%= json_escape((trigger_id)) -%>\"> </span>\n<% end %>\n\n\n    </div>\n<% end %>\n\n                    </div>\n                </div>\n            <% end %>\n        </div>\n    </div>\n<% end %>\n"},
    "stage_result": {"html": "<% scope = {:state => @stage.getState()}; -%><div class=\"color_code <%= json_escape((scope[:state])) -%>\"><%= json_escape((check_for_cancelled_contents(scope[:state]))) -%></div>\n<span class=\"message\" style=\"float:right; padding: 0;\"><%= json_escape((l.string(scope[:state]))) -%></span>\n"},
    "stage_run_details": {"html": "<% scope = {}; -%><% _scope = {:stage => @stage}; -%><div class=\"schedule_info\">\n    <%= json_escape((trigger_message_with_formatted_date_time(_scope[:stage].getCreatedTime(), _scope[:stage].getApprovedBy()))) -%>\n</div>\n\n\n<div class=\"duration\">\n    <span class=\"label\"><%= json_escape((l.string("Duration:"))) -%></span>\n    <span class=\"time\"><%= json_escape((@stage.getDuration())) -%></span>\n</div>\n\n<span class=\"compare_pipeline\">\n        <% scope[:identifier] = @stage.getIdentifier()
           scope[:counter] = scope[:identifier].getPipelineCounter() %>\n        <%= json_escape((link_to("#{l.string("COMPARE")}",
                    compare_pipelines_path(:pipeline_name => scope[:identifier].getPipelineName(), :from_counter => scope[:counter] - 1, :to_counter => scope[:counter]),
                    :title => l.string("TOOLTIP_COMPARE_WITH_PREVIOUS")))) -%>    \n</span>\n"},
    "other_stage_runs": {"html": "<% scope = {}; -%><% if @stage.getTotalRuns() > 1 %>\n    <ul class=\"micro_content_root other_runs\">\n        <% (1..@stage.getTotalRuns()).each do |n_in_other_stage_runs| %>\n            <% next if @stage.getStageCounter() == n_in_other_stage_runs.to_s %>\n            <li>\n                <a href=\"<%= json_escape((stage_detail_tab_path(:stage_counter => n_in_other_stage_runs, :action => params[:action]))) -%>\">\n                    <span style=\"float:left; margin-right: 10px;\"><%= json_escape((l.string("Run:") + " " + l.X_of_Y(n_in_other_stage_runs, @stage.getTotalRuns()))) -%></span>\n                    <% _scope = {:state=>@stage.getStateForRun(n_in_other_stage_runs)}; -%><div class=\"color_code <%= json_escape((_scope[:state])) -%>\"><%= json_escape((check_for_cancelled_contents(_scope[:state]))) -%></div>\n<span class=\"message\" style=\"float:right; padding: 0;\"><%= json_escape((l.string(_scope[:state]))) -%></span>\n\n                </a>\n            </li>\n        <% end %>\n    </ul>\n<% end %>\n"},
    "current_stage_run": {"html": "<% scope = {}; -%><% scope[:stage_x_of_y]= l.X_of_Y(@stage.getStageCounter(), @stage.getTotalRuns()) %>\n<% if @stage.getTotalRuns() > 1 %>\n    <a href=\"#\" id=\"show_other_stage_runs\"><%= json_escape((scope[:stage_x_of_y])) -%></a>\n<% else %>\n    <span><%= json_escape((scope[:stage_x_of_y])) -%></span>\n<% end %>\n"},
    <% unless ['pipeline','stats'].include?(params[:action]) -%>
    "stage_history": {"html": "<% scope = {:stage_history_page => @stage_history_page, :tab => params[:action], :current_stage_pipeline => @pipeline, :current_config_version => @current_config_version}; -%><div class=\"stage_history\">\n    <h3><%= json_escape((l.string("STAGE_HISTORY"))) -%></h3>\n    <%
       current_config_version = scope[:current_config_version]
       stage_history_page = scope[:stage_history_page]
       immediate_chronologically_forward_stage_history_entry = stage_history_page.getImmediateChronologicallyForwardStageHistoryEntry()
       bottom_of_last_page_config_version = immediate_chronologically_forward_stage_history_entry.nil? ? nil : immediate_chronologically_forward_stage_history_entry.getConfigVersion()
    -%>\n    <% stage_history_page.getStages().each_with_index do |stage_in_stage_history, index_in_stage_history| %>\n        <% if current_config_version != stage_in_stage_history.getConfigVersion() &&  (bottom_of_last_page_config_version.nil? || bottom_of_last_page_config_version != stage_in_stage_history.getConfigVersion()) %>\n            <% later_config_version = current_config_version -%>\n            <% current_config_version = stage_in_stage_history.getConfigVersion() -%>\n            <div class=\"config_change <%= json_escape(("counter_#{stage_in_stage_history.getIdentifier().getPipelineCounter()}_#{stage_in_stage_history.getIdentifier().getStageCounter()}")) -%>\">\n               <% if is_user_an_admin? && current_config_version != nil %>\n                    <% span_text = link_to("Config Changed", "#", :onclick => "Modalbox.show('#{config_change_path(:later_md5 => later_config_version, :earlier_md5 => current_config_version)}', {overlayClose: false, title: 'Config Changes'})") %>\n                <% else %>\n                    <% span_text = "Config Changed" %>\n                <% end %>\n\n                <span><%= json_escape((span_text)) -%></span>\n            </div>\n        <% end %>\n        <div class=\"stage\">\n            <a class=\"<%= json_escape((is_current_stage?(stage_id_in_stage_history = stage_in_stage_history.getIdentifier()) ? "selected alert" : "")) -%>\" href=\"<%= json_escape((tab_aware_path_for_stage stage_id_in_stage_history, scope[:tab])) -%>\">\n                <div class=\"label_counter_wrapper\">\n                    <div class=\"color_code_stage <%= json_escape((stage_in_stage_history.getState())) -%> <%= json_escape((stage_in_stage_history.hasRerunJobs() ? "has_rerun_jobs" : "has_no_rerun_jobs")) -%>\">\n                        <%= json_escape((check_for_cancelled_contents(stage_in_stage_history.getState()))) -%>\n                    </div>\n                    <%- if stage_in_stage_history.hasRerunJobs() -%>\n                        <img class=\"has_rerun_jobs_icon\" src=\"<%= json_escape((image_path('/images/g9/icons/icon_rerun_flag.png'))) -%>\">\n                     <%- end -%>\n                    <span class=\"pipeline_label\"><%= json_escape((smart_word_breaker(stage_in_stage_history.getIdentifier().getPipelineLabel()))) -%></span>\n                    <% if stage_in_stage_history.getIdentifier().getStageCounter().to_i > 1 %>\n                        <span class=\"stage_counter secondary\"><%= json_escape((l.string("STAGE_RUN_NUMBER", [stage_in_stage_history.getIdentifier().getStageCounter()]))) -%></span>\n                    <% end %>\n                </div>\n            </a>\n            <span class=\"compare_pipeline hidden\">\n                <a href=\"<%= json_escape((compare_pipelines_path(:pipeline_name => stage_in_stage_history.getIdentifier().getPipelineName(), :to_counter => stage_in_stage_history.getIdentifier().getPipelineCounter(), :from_counter => scope[:current_stage_pipeline].getCounter()))) -%>\">&nbsp;</a>\n            </span>\n        </div>\n    <% end %>\n    <% _scope = {:page_handler => :stage_history_pagination_handler, :pagination => scope[:stage_history_page].getPagination(), :handler_args => [scope[:tab]]}; -%><%- _scope[:handler_args] = Array(_scope[:handler_args]) -%>\n<% if _scope[:pagination].getTotalPages() > 0 %>\n    <div class=\"pagination\">\n        <div class=\"wrapper\">\n            <% _scope[:pagination].getPages().each do |page| %>\n                <% if page.isDots() %>\n                    <span>...</span>\n                <% else %>\n                    <% if page.isCurrent() %>\n                        <span class=\"current_page\"><%= json_escape((page.getLabel())) -%></span>\n                    <% else %>\n                        <%= json_escape((send(_scope[:page_handler], page, *_scope[:handler_args]))) -%>\n                    <% end %>\n                <% end %>\n            <% end %>\n        </div>\n    </div>\n<% end %>\n</div>\n<script type=\"text/javascript\">\n    Util.on_load(function() {\n        compare_link_handlers();\n    });\n</script>"},
    <% end %>
    "pipeline_header": {"html": "<% scope = {}; -%><% if @lockedPipeline
    scope[:entity_wrapper_class] = "locked"
end %>\n\n<div class=\"entity_status_wrapper page_header <%= json_escape((scope[:entity_wrapper_class])) -%>\">\n    <% _scope = {:pipeline => @pipeline, :third => {:link => url_for_pipeline_value_stream_map(@pipeline), :text => @pipeline.getLabel()}, :fourth => @stage.getName()}; -%><ul class=\"entity_title\">\n    <!--<li><%= json_escape((link_to "Pipelines", url_for_path('pipelines'))) -%></li>-->\n    <li class=\"name\"><%= json_escape((link_to _scope[:pipeline].getName(), url_for_pipeline(_scope[:pipeline].getName()))) -%></li>\n\n    <% if _scope[:third][:link] %>\n        <li><%= json_escape((link_to _scope[:third][:text], _scope[:third][:link])) -%> </li>\n     <% else %>\n         <li class=\"last\"><h1><%= json_escape((_scope[:third][:text])) -%></h1> </li>\n    <% end %>\n\n    <% if _scope[:fourth] %>\n        <li class=\"last\"><h1><%= json_escape((_scope[:fourth])) -%></h1></li>\n    <% end %>\n</ul>\n    <% if @lockedPipeline %>\n        <% if @pipeline.hasStage(@lockedPipeline) %>\n            <% if @pipeline.canUnlock() %>\n                <div class=\"locked_instance\" id='unlock'>\n                    <%= json_escape((blocking_link_to_remote "Click to unlock", :method => :post, :url => api_pipeline_action_path(:pipeline_name => @pipeline.getName(), :action => 'releaseLock'),
                                                :update => {:failure => "message_pane", :success => 'function(){}'}, :before => "spinny('unlock');")) -%>\n                </div>\n            <% else %>\n                <div class=\"locked_instance\">\n                    <span><%= json_escape((l.string('LOCKED'))) -%></span>\n                </div>\n            <% end %>\n        <% else %>\n            <div class=\"locked_instance\">\n                (<%= json_escape((link_to(l.string("LOCKED_BY_LABEL", [@lockedPipeline.getPipelineLabel()]), stage_detail_pipeline_tab_for_identifier(@lockedPipeline)))) -%>)\n            </div>\n        <% end %>\n    <% elsif @pipeline.isLockable() %>\n        <div class=\"locked_instance\">\n            <span><%= json_escape((l.string('UNLOCKED'))) -%></span>\n        </div>\n    <% end %>\n    <a href=\"<%= json_escape((api_pipeline_stage_feed_path(:name => @pipeline.getName()))) -%>\"><div class=\"feed\">&nbsp;</div></a>\n</div>"}
}